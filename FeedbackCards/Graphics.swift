//
//  Graphics.swift
//  Feedback Cards
//
//  Created by Jo Brunner on 04.01.17.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

import UIKit



class Graphics: NSObject {
    
    
    //MARK: - Colors
    
    static let tintColor = UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1)
    static let vorbildColor = UIColor(hue: 0.385, saturation: 0.306, brightness: 0.576, alpha: 1)
    static let macherColor = UIColor(hue: 0.75, saturation: 0.446, brightness: 0.616, alpha: 1)
    static let mitspielerColor = UIColor(hue: 0.03, saturation: 0.587, brightness: 0.769, alpha: 1)
    static let padawanColor = UIColor(hue: 0.584, saturation: 0.42, brightness: 0.682, alpha: 1)
    static let zuschauerColor = UIColor(hue: 0.108, saturation: 0.755, brightness: 0.784, alpha: 1)
    static let enthalterColor = UIColor(white: 0.667, alpha: 1)
    
    
    //MARK: - Canvas Drawings
    
    /// Icon Library
    
    class func drawClose2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 100)
        
        /// Group
        do {
            context.saveGState()
            context.translateBy(x: 5, y: 5)
            
            /// Oval 4
            let oval4 = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 90, height: 90))
            context.saveGState()
            oval4.lineWidth = 3
            UIColor(hue: 0.764, saturation: 0.673, brightness: 0.961, alpha: 1).setStroke()
            oval4.stroke()
            context.restoreGState()
            
            /// Line
            let line = UIBezierPath()
            line.move(to: CGPoint(x: 0.5, y: 0.5))
            line.addLine(to: CGPoint(x: 50.5, y: 49.5))
            context.saveGState()
            context.translateBy(x: 20, y: 20)
            line.lineCapStyle = .square
            line.lineWidth = 3
            UIColor(hue: 0.764, saturation: 0.673, brightness: 0.961, alpha: 1).setStroke()
            line.stroke()
            context.restoreGState()
            
            /// Line
            let line2 = UIBezierPath()
            line2.move(to: CGPoint(x: 50.5, y: 0.5))
            line2.addLine(to: CGPoint(x: 0.5, y: 50.5))
            context.saveGState()
            context.translateBy(x: 20, y: 20)
            line2.lineCapStyle = .square
            line2.lineWidth = 3
            UIColor(hue: 0.764, saturation: 0.673, brightness: 0.961, alpha: 1).setStroke()
            line2.stroke()
            context.restoreGState()
            
            context.restoreGState()
        }
        
        context.restoreGState()
    }
    
    class func drawInfo2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 100)
        
        /// ?
        let layer = NSMutableAttributedString(string: "?")
        layer.addAttribute(NSFontAttributeName, value: UIFont(name: "Helvetica", size: 90)!, range: NSRange(location: 0, length: layer.length))
        layer.addAttribute(NSForegroundColorAttributeName, value: UIColor(hue: 0.764, saturation: 0.673, brightness: 0.961, alpha: 1), range: NSRange(location: 0, length: layer.length))
        do {
            let paragraphStyle = NSMutableParagraphStyle()
            paragraphStyle.alignment = .center
            layer.addAttribute(NSParagraphStyleAttributeName, value: paragraphStyle, range: NSRange(location: 0, length: layer.length))
        }
        context.saveGState()
        layer.draw(at: CGPoint(x: 25, y: -3))
        context.restoreGState()
        /// Oval 4
        let oval4 = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 90, height: 90))
        context.saveGState()
        context.translateBy(x: 5, y: 5)
        oval4.lineWidth = 3
        UIColor(hue: 0.764, saturation: 0.673, brightness: 0.961, alpha: 1).setStroke()
        oval4.stroke()
        context.restoreGState()
        
        context.restoreGState()
    }
    
    class func drawSettings2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 101, height: 100), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 101, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 101, y: resizedFrame.height / 100)
        
        /// Settings
        do {
            context.saveGState()
            
            /// Settings
            do {
                context.saveGState()
                
                /// Shape
                let shape = UIBezierPath()
                shape.move(to: CGPoint(x: 49.92, y: 88.89))
                shape.addLine(to: CGPoint(x: 40.46, y: 88.89))
                shape.addCurve(to: CGPoint(x: 33.69, y: 76.78), controlPoint1: CGPoint(x: 39.04, y: 88.89), controlPoint2: CGPoint(x: 38.54, y: 88.89))
                shape.addLine(to: CGPoint(x: 29.95, y: 75.25))
                shape.addCurve(to: CGPoint(x: 18.13, y: 79.91), controlPoint1: CGPoint(x: 19.74, y: 79.91), controlPoint2: CGPoint(x: 18.53, y: 79.91))
                shape.addLine(to: CGPoint(x: 17.35, y: 79.91))
                shape.addLine(to: CGPoint(x: 16.68, y: 79.34))
                shape.addLine(to: CGPoint(x: 9.97, y: 72.72))
                shape.addCurve(to: CGPoint(x: 13.85, y: 59.39), controlPoint1: CGPoint(x: 8.95, y: 71.7), controlPoint2: CGPoint(x: 8.6, y: 71.34))
                shape.addLine(to: CGPoint(x: 12.32, y: 55.74))
                shape.addCurve(to: CGPoint(x: 0, y: 49.31), controlPoint1: CGPoint(x: 0, y: 51.29), controlPoint2: CGPoint(x: 0, y: 50.78))
                shape.addLine(to: CGPoint(x: 0, y: 39.96))
                shape.addCurve(to: CGPoint(x: 12.28, y: 33.25), controlPoint1: CGPoint(x: 0, y: 38.5), controlPoint2: CGPoint(x: 0, y: 38.04))
                shape.addLine(to: CGPoint(x: 13.81, y: 29.6))
                shape.addCurve(to: CGPoint(x: 9.73, y: 16.42), controlPoint1: CGPoint(x: 8.26, y: 17.83), controlPoint2: CGPoint(x: 8.64, y: 17.46))
                shape.addLine(to: CGPoint(x: 16.95, y: 9.3))
                shape.addLine(to: CGPoint(x: 17.84, y: 9.27))
                shape.addCurve(to: CGPoint(x: 29.86, y: 13.69), controlPoint1: CGPoint(x: 18.93, y: 9.27), controlPoint2: CGPoint(x: 22.97, y: 10.75))
                shape.addLine(to: CGPoint(x: 33.59, y: 12.16))
                shape.addCurve(to: CGPoint(x: 40.06, y: 0), controlPoint1: CGPoint(x: 38.09, y: -0), controlPoint2: CGPoint(x: 38.64, y: 0))
                shape.addLine(to: CGPoint(x: 49.52, y: 0))
                shape.addCurve(to: CGPoint(x: 56.29, y: 12.12), controlPoint1: CGPoint(x: 50.94, y: 0), controlPoint2: CGPoint(x: 51.44, y: 0))
                shape.addLine(to: CGPoint(x: 60.04, y: 13.64))
                shape.addCurve(to: CGPoint(x: 71.86, y: 8.98), controlPoint1: CGPoint(x: 70.23, y: 8.98), controlPoint2: CGPoint(x: 71.45, y: 8.98))
                shape.addLine(to: CGPoint(x: 72.64, y: 8.98))
                shape.addLine(to: CGPoint(x: 73.3, y: 9.55))
                shape.addLine(to: CGPoint(x: 80.01, y: 16.15))
                shape.addCurve(to: CGPoint(x: 76.13, y: 29.5), controlPoint1: CGPoint(x: 81.03, y: 17.19), controlPoint2: CGPoint(x: 81.38, y: 17.54))
                shape.addLine(to: CGPoint(x: 77.66, y: 33.16))
                shape.addCurve(to: CGPoint(x: 90, y: 39.58), controlPoint1: CGPoint(x: 90, y: 37.59), controlPoint2: CGPoint(x: 90, y: 38.11))
                shape.addLine(to: CGPoint(x: 90, y: 48.91))
                shape.addCurve(to: CGPoint(x: 77.7, y: 55.64), controlPoint1: CGPoint(x: 90, y: 50.34), controlPoint2: CGPoint(x: 90, y: 50.85))
                shape.addLine(to: CGPoint(x: 76.19, y: 59.29))
                shape.addCurve(to: CGPoint(x: 80.31, y: 72.43), controlPoint1: CGPoint(x: 81.71, y: 71.01), controlPoint2: CGPoint(x: 81.34, y: 71.38))
                shape.addLine(to: CGPoint(x: 73.04, y: 79.6))
                shape.addLine(to: CGPoint(x: 72.14, y: 79.62))
                shape.addCurve(to: CGPoint(x: 60.15, y: 75.2), controlPoint1: CGPoint(x: 71.06, y: 79.62), controlPoint2: CGPoint(x: 67.03, y: 78.14))
                shape.addLine(to: CGPoint(x: 56.39, y: 76.73))
                shape.addCurve(to: CGPoint(x: 49.92, y: 88.89), controlPoint1: CGPoint(x: 51.88, y: 88.89), controlPoint2: CGPoint(x: 51.37, y: 88.89))
                shape.close()
                shape.move(to: CGPoint(x: 41.45, y: 85.03))
                shape.addLine(to: CGPoint(x: 48.91, y: 85.03))
                shape.addCurve(to: CGPoint(x: 53.1, y: 74.59), controlPoint1: CGPoint(x: 49.76, y: 83.27), controlPoint2: CGPoint(x: 51.62, y: 78.61))
                shape.addLine(to: CGPoint(x: 53.4, y: 73.79))
                shape.addLine(to: CGPoint(x: 60.19, y: 71.02))
                shape.addLine(to: CGPoint(x: 60.92, y: 71.34))
                shape.addCurve(to: CGPoint(x: 71.62, y: 75.6), controlPoint1: CGPoint(x: 64.97, y: 73.08), controlPoint2: CGPoint(x: 69.76, y: 75))
                shape.addLine(to: CGPoint(x: 76.86, y: 70.43))
                shape.addCurve(to: CGPoint(x: 72.36, y: 60.17), controlPoint1: CGPoint(x: 76.2, y: 68.57), controlPoint2: CGPoint(x: 74.18, y: 64.01))
                shape.addLine(to: CGPoint(x: 71.99, y: 59.39))
                shape.addLine(to: CGPoint(x: 74.8, y: 52.63))
                shape.addLine(to: CGPoint(x: 75.57, y: 52.33))
                shape.addCurve(to: CGPoint(x: 86.17, y: 47.89), controlPoint1: CGPoint(x: 79.66, y: 50.75), controlPoint2: CGPoint(x: 84.4, y: 48.79))
                shape.addLine(to: CGPoint(x: 86.17, y: 40.63))
                shape.addCurve(to: CGPoint(x: 75.59, y: 36.52), controlPoint1: CGPoint(x: 84.38, y: 39.78), controlPoint2: CGPoint(x: 79.66, y: 37.97))
                shape.addLine(to: CGPoint(x: 74.79, y: 36.23))
                shape.addLine(to: CGPoint(x: 71.96, y: 29.46))
                shape.addLine(to: CGPoint(x: 72.3, y: 28.7))
                shape.addCurve(to: CGPoint(x: 76.6, y: 18.19), controlPoint1: CGPoint(x: 74.04, y: 24.74), controlPoint2: CGPoint(x: 75.98, y: 20.07))
                shape.addLine(to: CGPoint(x: 71.34, y: 13.01))
                shape.addCurve(to: CGPoint(x: 60.88, y: 17.5), controlPoint1: CGPoint(x: 69.64, y: 13.6), controlPoint2: CGPoint(x: 64.89, y: 15.66))
                shape.addLine(to: CGPoint(x: 60.14, y: 17.85))
                shape.addLine(to: CGPoint(x: 53.34, y: 15.09))
                shape.addLine(to: CGPoint(x: 53.04, y: 14.32))
                shape.addCurve(to: CGPoint(x: 48.54, y: 3.87), controlPoint1: CGPoint(x: 51.43, y: 10.28), controlPoint2: CGPoint(x: 49.44, y: 5.6))
                shape.addLine(to: CGPoint(x: 41.08, y: 3.87))
                shape.addCurve(to: CGPoint(x: 36.9, y: 14.3), controlPoint1: CGPoint(x: 40.22, y: 5.62), controlPoint2: CGPoint(x: 38.37, y: 10.29))
                shape.addLine(to: CGPoint(x: 36.6, y: 15.1))
                shape.addLine(to: CGPoint(x: 29.83, y: 17.87))
                shape.addLine(to: CGPoint(x: 29.1, y: 17.56))
                shape.addCurve(to: CGPoint(x: 18.37, y: 13.3), controlPoint1: CGPoint(x: 25.04, y: 15.82), controlPoint2: CGPoint(x: 20.24, y: 13.89))
                shape.addLine(to: CGPoint(x: 13.14, y: 18.47))
                shape.addCurve(to: CGPoint(x: 17.63, y: 28.72), controlPoint1: CGPoint(x: 13.79, y: 20.33), controlPoint2: CGPoint(x: 15.82, y: 24.88))
                shape.addLine(to: CGPoint(x: 18.01, y: 29.5))
                shape.addLine(to: CGPoint(x: 15.18, y: 36.26))
                shape.addLine(to: CGPoint(x: 14.42, y: 36.56))
                shape.addCurve(to: CGPoint(x: 3.84, y: 40.99), controlPoint1: CGPoint(x: 10.34, y: 38.15), controlPoint2: CGPoint(x: 5.61, y: 40.1))
                shape.addLine(to: CGPoint(x: 3.84, y: 48.26))
                shape.addCurve(to: CGPoint(x: 14.41, y: 52.39), controlPoint1: CGPoint(x: 5.63, y: 49.12), controlPoint2: CGPoint(x: 10.34, y: 50.93))
                shape.addLine(to: CGPoint(x: 15.2, y: 52.68))
                shape.addLine(to: CGPoint(x: 18.03, y: 59.43))
                shape.addLine(to: CGPoint(x: 17.69, y: 60.19))
                shape.addCurve(to: CGPoint(x: 13.39, y: 70.69), controlPoint1: CGPoint(x: 15.95, y: 64.15), controlPoint2: CGPoint(x: 14.01, y: 68.81))
                shape.addLine(to: CGPoint(x: 18.66, y: 75.88))
                shape.addCurve(to: CGPoint(x: 29.11, y: 71.38), controlPoint1: CGPoint(x: 20.35, y: 75.28), controlPoint2: CGPoint(x: 25.1, y: 73.23))
                shape.addLine(to: CGPoint(x: 29.86, y: 71.04))
                shape.addLine(to: CGPoint(x: 36.64, y: 73.81))
                shape.addLine(to: CGPoint(x: 36.95, y: 74.58))
                shape.addCurve(to: CGPoint(x: 41.45, y: 85.03), controlPoint1: CGPoint(x: 38.56, y: 78.62), controlPoint2: CGPoint(x: 40.55, y: 83.29))
                shape.close()
                shape.move(to: CGPoint(x: 45, y: 60))
                shape.addCurve(to: CGPoint(x: 29.26, y: 44.44), controlPoint1: CGPoint(x: 36.32, y: 60), controlPoint2: CGPoint(x: 29.26, y: 53.02))
                shape.addCurve(to: CGPoint(x: 45, y: 28.9), controlPoint1: CGPoint(x: 29.26, y: 35.87), controlPoint2: CGPoint(x: 36.32, y: 28.9))
                shape.addCurve(to: CGPoint(x: 60.72, y: 44.44), controlPoint1: CGPoint(x: 53.67, y: 28.9), controlPoint2: CGPoint(x: 60.72, y: 35.87))
                shape.addCurve(to: CGPoint(x: 45, y: 60), controlPoint1: CGPoint(x: 60.72, y: 53.02), controlPoint2: CGPoint(x: 53.67, y: 60))
                shape.close()
                shape.move(to: CGPoint(x: 45, y: 32.76))
                shape.addCurve(to: CGPoint(x: 33.1, y: 44.44), controlPoint1: CGPoint(x: 38.43, y: 32.76), controlPoint2: CGPoint(x: 33.1, y: 38))
                shape.addCurve(to: CGPoint(x: 45, y: 56.14), controlPoint1: CGPoint(x: 33.1, y: 50.89), controlPoint2: CGPoint(x: 38.43, y: 56.14))
                shape.addCurve(to: CGPoint(x: 56.89, y: 44.44), controlPoint1: CGPoint(x: 51.55, y: 56.14), controlPoint2: CGPoint(x: 56.89, y: 50.89))
                shape.addCurve(to: CGPoint(x: 45, y: 32.76), controlPoint1: CGPoint(x: 56.89, y: 38), controlPoint2: CGPoint(x: 51.55, y: 32.76))
                shape.close()
                shape.move(to: CGPoint(x: 45, y: 32.76))
                context.saveGState()
                context.translateBy(x: 5, y: 5.03)
                shape.usesEvenOddFillRule = true
                UIColor(hue: 0.764, saturation: 0.673, brightness: 0.961, alpha: 1).setFill()
                shape.fill()
                context.restoreGState()
                
                context.restoreGState()
            }
            
            context.restoreGState()
        }
        
        context.restoreGState()
    }
    
    class func drawAppicon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 400), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 400), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 400)
        
        /// Background Color
        UIColor(hue: 0.791, saturation: 0, brightness: 0.29, alpha: 1).setFill()
        context.fill(context.boundingBoxOfClipPath)
        
        /// Structure
        do {
            context.saveGState()
            context.translateBy(x: 25, y: 37)
            
            /// Combined Shape
            let combinedShape = UIBezierPath()
            combinedShape.move(to: CGPoint(x: 198.25, y: 218.7))
            combinedShape.addCurve(to: CGPoint(x: 200, y: 200), controlPoint1: CGPoint(x: 199.4, y: 212.64), controlPoint2: CGPoint(x: 200, y: 206.39))
            combinedShape.addCurve(to: CGPoint(x: 174.57, y: 133.37), controlPoint1: CGPoint(x: 200, y: 174.41), controlPoint2: CGPoint(x: 190.38, y: 151.06))
            combinedShape.addLine(to: CGPoint(x: 217.16, y: 87.7))
            combinedShape.addCurve(to: CGPoint(x: 250, y: 100), controlPoint1: CGPoint(x: 225.94, y: 95.36), controlPoint2: CGPoint(x: 237.43, y: 100))
            combinedShape.addCurve(to: CGPoint(x: 300, y: 50), controlPoint1: CGPoint(x: 277.61, y: 100), controlPoint2: CGPoint(x: 300, y: 77.61))
            combinedShape.addCurve(to: CGPoint(x: 250, y: 0), controlPoint1: CGPoint(x: 300, y: 22.39), controlPoint2: CGPoint(x: 277.61, y: 0))
            combinedShape.addCurve(to: CGPoint(x: 200, y: 50), controlPoint1: CGPoint(x: 222.39, y: 0), controlPoint2: CGPoint(x: 200, y: 22.39))
            combinedShape.addCurve(to: CGPoint(x: 210.3, y: 80.39), controlPoint1: CGPoint(x: 200, y: 61.43), controlPoint2: CGPoint(x: 203.84, y: 71.97))
            combinedShape.addLine(to: CGPoint(x: 167.53, y: 126.25))
            combinedShape.addCurve(to: CGPoint(x: 100, y: 100), controlPoint1: CGPoint(x: 149.74, y: 109.95), controlPoint2: CGPoint(x: 126.03, y: 100))
            combinedShape.addCurve(to: CGPoint(x: 0, y: 200), controlPoint1: CGPoint(x: 44.77, y: 100), controlPoint2: CGPoint(x: 0, y: 144.77))
            combinedShape.addCurve(to: CGPoint(x: 100, y: 300), controlPoint1: CGPoint(x: 0, y: 255.23), controlPoint2: CGPoint(x: 44.77, y: 300))
            combinedShape.addCurve(to: CGPoint(x: 195.9, y: 228.42), controlPoint1: CGPoint(x: 145.35, y: 300), controlPoint2: CGPoint(x: 183.66, y: 269.81))
            combinedShape.addLine(to: CGPoint(x: 250.63, y: 242.07))
            combinedShape.addCurve(to: CGPoint(x: 250, y: 250), controlPoint1: CGPoint(x: 250.21, y: 244.65), controlPoint2: CGPoint(x: 250, y: 247.3))
            combinedShape.addCurve(to: CGPoint(x: 300, y: 300), controlPoint1: CGPoint(x: 250, y: 277.61), controlPoint2: CGPoint(x: 272.39, y: 300))
            combinedShape.addCurve(to: CGPoint(x: 350, y: 250), controlPoint1: CGPoint(x: 327.61, y: 300), controlPoint2: CGPoint(x: 350, y: 277.61))
            combinedShape.addCurve(to: CGPoint(x: 300, y: 200), controlPoint1: CGPoint(x: 350, y: 222.39), controlPoint2: CGPoint(x: 327.61, y: 200))
            combinedShape.addCurve(to: CGPoint(x: 253.19, y: 232.4), controlPoint1: CGPoint(x: 278.58, y: 200), controlPoint2: CGPoint(x: 260.31, y: 213.47))
            combinedShape.addLine(to: CGPoint(x: 198.25, y: 218.7))
            combinedShape.close()
            combinedShape.move(to: CGPoint(x: 300, y: 290))
            combinedShape.addCurve(to: CGPoint(x: 340, y: 250), controlPoint1: CGPoint(x: 322.09, y: 290), controlPoint2: CGPoint(x: 340, y: 272.09))
            combinedShape.addCurve(to: CGPoint(x: 300, y: 210), controlPoint1: CGPoint(x: 340, y: 227.91), controlPoint2: CGPoint(x: 322.09, y: 210))
            combinedShape.addCurve(to: CGPoint(x: 260, y: 250), controlPoint1: CGPoint(x: 277.91, y: 210), controlPoint2: CGPoint(x: 260, y: 227.91))
            combinedShape.addCurve(to: CGPoint(x: 300, y: 290), controlPoint1: CGPoint(x: 260, y: 272.09), controlPoint2: CGPoint(x: 277.91, y: 290))
            combinedShape.close()
            combinedShape.move(to: CGPoint(x: 250, y: 90))
            combinedShape.addCurve(to: CGPoint(x: 290, y: 50), controlPoint1: CGPoint(x: 272.09, y: 90), controlPoint2: CGPoint(x: 290, y: 72.09))
            combinedShape.addCurve(to: CGPoint(x: 250, y: 10), controlPoint1: CGPoint(x: 290, y: 27.91), controlPoint2: CGPoint(x: 272.09, y: 10))
            combinedShape.addCurve(to: CGPoint(x: 210, y: 50), controlPoint1: CGPoint(x: 227.91, y: 10), controlPoint2: CGPoint(x: 210, y: 27.91))
            combinedShape.addCurve(to: CGPoint(x: 250, y: 90), controlPoint1: CGPoint(x: 210, y: 72.09), controlPoint2: CGPoint(x: 227.91, y: 90))
            combinedShape.close()
            combinedShape.move(to: CGPoint(x: 100, y: 290))
            combinedShape.addCurve(to: CGPoint(x: 190, y: 200), controlPoint1: CGPoint(x: 149.71, y: 290), controlPoint2: CGPoint(x: 190, y: 249.71))
            combinedShape.addCurve(to: CGPoint(x: 100, y: 110), controlPoint1: CGPoint(x: 190, y: 150.29), controlPoint2: CGPoint(x: 149.71, y: 110))
            combinedShape.addCurve(to: CGPoint(x: 10, y: 200), controlPoint1: CGPoint(x: 50.29, y: 110), controlPoint2: CGPoint(x: 10, y: 150.29))
            combinedShape.addCurve(to: CGPoint(x: 100, y: 290), controlPoint1: CGPoint(x: 10, y: 249.71), controlPoint2: CGPoint(x: 50.29, y: 290))
            combinedShape.close()
            combinedShape.move(to: CGPoint(x: 100, y: 290))
            context.saveGState()
            combinedShape.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            combinedShape.fill()
            context.restoreGState()
            
            context.restoreGState()
        }
        /// Big Peer
        do {
            context.saveGState()
            context.translateBy(x: 75, y: 187)
            
            /// Small Head Shape
            let smallHeadShape = UIBezierPath()
            smallHeadShape.move(to: CGPoint(x: 30, y: 60))
            smallHeadShape.addCurve(to: CGPoint(x: 60, y: 30), controlPoint1: CGPoint(x: 46.57, y: 60), controlPoint2: CGPoint(x: 60, y: 46.57))
            smallHeadShape.addCurve(to: CGPoint(x: 30, y: 0), controlPoint1: CGPoint(x: 60, y: 13.43), controlPoint2: CGPoint(x: 46.57, y: 0))
            smallHeadShape.addCurve(to: CGPoint(x: 0, y: 30), controlPoint1: CGPoint(x: 13.43, y: 0), controlPoint2: CGPoint(x: 0, y: 13.43))
            smallHeadShape.addCurve(to: CGPoint(x: 30, y: 60), controlPoint1: CGPoint(x: 0, y: 46.57), controlPoint2: CGPoint(x: 13.43, y: 60))
            smallHeadShape.close()
            smallHeadShape.move(to: CGPoint(x: 30, y: 50))
            smallHeadShape.addCurve(to: CGPoint(x: 50, y: 30), controlPoint1: CGPoint(x: 41.05, y: 50), controlPoint2: CGPoint(x: 50, y: 41.05))
            smallHeadShape.addCurve(to: CGPoint(x: 30, y: 10), controlPoint1: CGPoint(x: 50, y: 18.95), controlPoint2: CGPoint(x: 41.05, y: 10))
            smallHeadShape.addCurve(to: CGPoint(x: 10, y: 30), controlPoint1: CGPoint(x: 18.95, y: 10), controlPoint2: CGPoint(x: 10, y: 18.95))
            smallHeadShape.addCurve(to: CGPoint(x: 30, y: 50), controlPoint1: CGPoint(x: 10, y: 41.05), controlPoint2: CGPoint(x: 18.95, y: 50))
            smallHeadShape.close()
            smallHeadShape.move(to: CGPoint(x: 30, y: 50))
            context.saveGState()
            context.translateBy(x: 20, y: 0)
            smallHeadShape.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallHeadShape.fill()
            context.restoreGState()
            
            /// Small Body Shape
            let smallBodyShape = UIBezierPath()
            smallBodyShape.move(to: CGPoint(x: 10, y: 74.98))
            smallBodyShape.addCurve(to: CGPoint(x: 10, y: 75.5), controlPoint1: CGPoint(x: 10, y: 75.32), controlPoint2: CGPoint(x: 10, y: 75.5))
            smallBodyShape.addCurve(to: CGPoint(x: 13.42, y: 76.34), controlPoint1: CGPoint(x: 10, y: 75.5), controlPoint2: CGPoint(x: 11.29, y: 75.82))
            smallBodyShape.addCurve(to: CGPoint(x: 50, y: 90), controlPoint1: CGPoint(x: 27.62, y: 81.95), controlPoint2: CGPoint(x: 48.25, y: 89.98))
            smallBodyShape.addCurve(to: CGPoint(x: 78.51, y: 80.08), controlPoint1: CGPoint(x: 51.44, y: 90.01), controlPoint2: CGPoint(x: 65.62, y: 84.87))
            smallBodyShape.addCurve(to: CGPoint(x: 90, y: 78), controlPoint1: CGPoint(x: 84.99, y: 78.93), controlPoint2: CGPoint(x: 90, y: 78))
            smallBodyShape.addCurve(to: CGPoint(x: 90, y: 75.78), controlPoint1: CGPoint(x: 90, y: 78), controlPoint2: CGPoint(x: 90, y: 77.19))
            smallBodyShape.addCurve(to: CGPoint(x: 100, y: 72), controlPoint1: CGPoint(x: 95.88, y: 73.57), controlPoint2: CGPoint(x: 100, y: 72))
            smallBodyShape.addLine(to: CGPoint(x: 100, y: 54))
            smallBodyShape.addCurve(to: CGPoint(x: 90, y: 10), controlPoint1: CGPoint(x: 100, y: 54), controlPoint2: CGPoint(x: 100, y: 20))
            smallBodyShape.addCurve(to: CGPoint(x: 50, y: 0), controlPoint1: CGPoint(x: 80, y: 0), controlPoint2: CGPoint(x: 50, y: 0))
            smallBodyShape.addCurve(to: CGPoint(x: 10, y: 10), controlPoint1: CGPoint(x: 50, y: 0), controlPoint2: CGPoint(x: 20, y: 0))
            smallBodyShape.addCurve(to: CGPoint(x: 0, y: 50), controlPoint1: CGPoint(x: 0, y: 20), controlPoint2: CGPoint(x: 0, y: 50))
            smallBodyShape.addLine(to: CGPoint(x: 0, y: 71))
            smallBodyShape.addCurve(to: CGPoint(x: 10, y: 74.98), controlPoint1: CGPoint(x: 0, y: 71), controlPoint2: CGPoint(x: 4.12, y: 72.65))
            smallBodyShape.close()
            smallBodyShape.move(to: CGPoint(x: 10, y: 74.98))
            smallBodyShape.addCurve(to: CGPoint(x: 10, y: 40), controlPoint1: CGPoint(x: 10, y: 71.11), controlPoint2: CGPoint(x: 10, y: 46.54))
            smallBodyShape.addCurve(to: CGPoint(x: 53, y: 65), controlPoint1: CGPoint(x: 10, y: 35.97), controlPoint2: CGPoint(x: 47, y: 75.5))
            smallBodyShape.addCurve(to: CGPoint(x: 18, y: 17), controlPoint1: CGPoint(x: 59, y: 54.5), controlPoint2: CGPoint(x: 13.24, y: 21.76))
            smallBodyShape.addCurve(to: CGPoint(x: 50, y: 10), controlPoint1: CGPoint(x: 24.99, y: 10.01), controlPoint2: CGPoint(x: 50, y: 10))
            smallBodyShape.addCurve(to: CGPoint(x: 82, y: 15), controlPoint1: CGPoint(x: 50, y: 10), controlPoint2: CGPoint(x: 78.31, y: 10.64))
            smallBodyShape.addCurve(to: CGPoint(x: 90, y: 49), controlPoint1: CGPoint(x: 93, y: 28), controlPoint2: CGPoint(x: 90, y: 35))
            smallBodyShape.addCurve(to: CGPoint(x: 90, y: 75.78), controlPoint1: CGPoint(x: 90, y: 59.76), controlPoint2: CGPoint(x: 90, y: 71.1))
            smallBodyShape.addCurve(to: CGPoint(x: 78.51, y: 80.08), controlPoint1: CGPoint(x: 86.6, y: 77.06), controlPoint2: CGPoint(x: 82.62, y: 78.55))
            smallBodyShape.addCurve(to: CGPoint(x: 50, y: 84.5), controlPoint1: CGPoint(x: 67.63, y: 82.02), controlPoint2: CGPoint(x: 52.58, y: 84.6))
            smallBodyShape.addCurve(to: CGPoint(x: 13.42, y: 76.34), controlPoint1: CGPoint(x: 46.66, y: 84.37), controlPoint2: CGPoint(x: 22.48, y: 78.55))
            smallBodyShape.addCurve(to: CGPoint(x: 10, y: 74.98), controlPoint1: CGPoint(x: 12.23, y: 75.87), controlPoint2: CGPoint(x: 11.08, y: 75.41))
            smallBodyShape.close()
            smallBodyShape.move(to: CGPoint(x: 10, y: 74.98))
            context.saveGState()
            context.translateBy(x: 0, y: 60)
            smallBodyShape.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallBodyShape.fill()
            context.restoreGState()
            
            context.restoreGState()
        }
        /// Small Peer
        do {
            context.saveGState()
            context.translateBy(x: 249, y: 62)
            
            /// Small Head Shape
            let smallHeadShape2 = UIBezierPath()
            smallHeadShape2.move(to: CGPoint(x: 15, y: 30))
            smallHeadShape2.addCurve(to: CGPoint(x: 30, y: 15), controlPoint1: CGPoint(x: 23.28, y: 30), controlPoint2: CGPoint(x: 30, y: 23.28))
            smallHeadShape2.addCurve(to: CGPoint(x: 15, y: 0), controlPoint1: CGPoint(x: 30, y: 6.72), controlPoint2: CGPoint(x: 23.28, y: 0))
            smallHeadShape2.addCurve(to: CGPoint(x: 0, y: 15), controlPoint1: CGPoint(x: 6.72, y: 0), controlPoint2: CGPoint(x: 0, y: 6.72))
            smallHeadShape2.addCurve(to: CGPoint(x: 15, y: 30), controlPoint1: CGPoint(x: 0, y: 23.28), controlPoint2: CGPoint(x: 6.72, y: 30))
            smallHeadShape2.close()
            smallHeadShape2.move(to: CGPoint(x: 15, y: 25))
            smallHeadShape2.addCurve(to: CGPoint(x: 25, y: 15), controlPoint1: CGPoint(x: 20.52, y: 25), controlPoint2: CGPoint(x: 25, y: 20.52))
            smallHeadShape2.addCurve(to: CGPoint(x: 15, y: 5), controlPoint1: CGPoint(x: 25, y: 9.48), controlPoint2: CGPoint(x: 20.52, y: 5))
            smallHeadShape2.addCurve(to: CGPoint(x: 5, y: 15), controlPoint1: CGPoint(x: 9.48, y: 5), controlPoint2: CGPoint(x: 5, y: 9.48))
            smallHeadShape2.addCurve(to: CGPoint(x: 15, y: 25), controlPoint1: CGPoint(x: 5, y: 20.52), controlPoint2: CGPoint(x: 9.48, y: 25))
            smallHeadShape2.close()
            smallHeadShape2.move(to: CGPoint(x: 15, y: 25))
            context.saveGState()
            context.translateBy(x: 10, y: 0)
            smallHeadShape2.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallHeadShape2.fill()
            context.restoreGState()
            
            /// Small Body Shape
            let smallBodyShape2 = UIBezierPath()
            smallBodyShape2.move(to: CGPoint(x: 45, y: 36.47))
            smallBodyShape2.addCurve(to: CGPoint(x: 45, y: 36.5), controlPoint1: CGPoint(x: 45, y: 36.49), controlPoint2: CGPoint(x: 45, y: 36.5))
            smallBodyShape2.addLine(to: CGPoint(x: 25, y: 35.75))
            smallBodyShape2.addLine(to: CGPoint(x: 0, y: 35.5))
            smallBodyShape2.addLine(to: CGPoint(x: 0, y: 25))
            smallBodyShape2.addCurve(to: CGPoint(x: 5, y: 5), controlPoint1: CGPoint(x: 0, y: 25), controlPoint2: CGPoint(x: 0, y: 10))
            smallBodyShape2.addCurve(to: CGPoint(x: 25, y: 0), controlPoint1: CGPoint(x: 10, y: 0), controlPoint2: CGPoint(x: 25, y: 0))
            smallBodyShape2.addCurve(to: CGPoint(x: 45, y: 5), controlPoint1: CGPoint(x: 25, y: 0), controlPoint2: CGPoint(x: 40, y: 0))
            smallBodyShape2.addCurve(to: CGPoint(x: 50, y: 27), controlPoint1: CGPoint(x: 50, y: 10), controlPoint2: CGPoint(x: 50, y: 27))
            smallBodyShape2.addLine(to: CGPoint(x: 50, y: 36))
            smallBodyShape2.addLine(to: CGPoint(x: 45, y: 35.95))
            smallBodyShape2.addCurve(to: CGPoint(x: 45, y: 24.5), controlPoint1: CGPoint(x: 45, y: 34.47), controlPoint2: CGPoint(x: 45, y: 30.13))
            smallBodyShape2.addCurve(to: CGPoint(x: 41, y: 7.5), controlPoint1: CGPoint(x: 45, y: 17.5), controlPoint2: CGPoint(x: 46.5, y: 14))
            smallBodyShape2.addCurve(to: CGPoint(x: 25, y: 5), controlPoint1: CGPoint(x: 39.15, y: 5.32), controlPoint2: CGPoint(x: 25, y: 5))
            smallBodyShape2.addCurve(to: CGPoint(x: 9, y: 8.5), controlPoint1: CGPoint(x: 25, y: 5), controlPoint2: CGPoint(x: 12.5, y: 5))
            smallBodyShape2.addCurve(to: CGPoint(x: 5, y: 23.06), controlPoint1: CGPoint(x: 3.5, y: 14), controlPoint2: CGPoint(x: 5, y: 19.5))
            smallBodyShape2.addCurve(to: CGPoint(x: 5, y: 35), controlPoint1: CGPoint(x: 5, y: 26.61), controlPoint2: CGPoint(x: 5, y: 35))
            smallBodyShape2.addLine(to: CGPoint(x: 25, y: 35.75))
            smallBodyShape2.addLine(to: CGPoint(x: 45, y: 35.95))
            smallBodyShape2.addCurve(to: CGPoint(x: 45, y: 35.95), controlPoint1: CGPoint(x: 45, y: 36.4), controlPoint2: CGPoint(x: 45, y: 36.22))
            smallBodyShape2.close()
            smallBodyShape2.move(to: CGPoint(x: 45, y: 36.47))
            context.saveGState()
            context.translateBy(x: 0, y: 30)
            smallBodyShape2.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallBodyShape2.fill()
            context.restoreGState()
            
            context.restoreGState()
        }
        /// Small Peer
        do {
            context.saveGState()
            context.translateBy(x: 300, y: 261)
            
            /// Small Head Shape
            let smallHeadShape3 = UIBezierPath()
            smallHeadShape3.move(to: CGPoint(x: 15, y: 30))
            smallHeadShape3.addCurve(to: CGPoint(x: 30, y: 15), controlPoint1: CGPoint(x: 23.28, y: 30), controlPoint2: CGPoint(x: 30, y: 23.28))
            smallHeadShape3.addCurve(to: CGPoint(x: 15, y: 0), controlPoint1: CGPoint(x: 30, y: 6.72), controlPoint2: CGPoint(x: 23.28, y: 0))
            smallHeadShape3.addCurve(to: CGPoint(x: 0, y: 15), controlPoint1: CGPoint(x: 6.72, y: 0), controlPoint2: CGPoint(x: 0, y: 6.72))
            smallHeadShape3.addCurve(to: CGPoint(x: 15, y: 30), controlPoint1: CGPoint(x: 0, y: 23.28), controlPoint2: CGPoint(x: 6.72, y: 30))
            smallHeadShape3.close()
            smallHeadShape3.move(to: CGPoint(x: 15, y: 25))
            smallHeadShape3.addCurve(to: CGPoint(x: 25, y: 15), controlPoint1: CGPoint(x: 20.52, y: 25), controlPoint2: CGPoint(x: 25, y: 20.52))
            smallHeadShape3.addCurve(to: CGPoint(x: 15, y: 5), controlPoint1: CGPoint(x: 25, y: 9.48), controlPoint2: CGPoint(x: 20.52, y: 5))
            smallHeadShape3.addCurve(to: CGPoint(x: 5, y: 15), controlPoint1: CGPoint(x: 9.48, y: 5), controlPoint2: CGPoint(x: 5, y: 9.48))
            smallHeadShape3.addCurve(to: CGPoint(x: 15, y: 25), controlPoint1: CGPoint(x: 5, y: 20.52), controlPoint2: CGPoint(x: 9.48, y: 25))
            smallHeadShape3.close()
            smallHeadShape3.move(to: CGPoint(x: 15, y: 25))
            context.saveGState()
            context.translateBy(x: 10, y: 0)
            smallHeadShape3.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallHeadShape3.fill()
            context.restoreGState()
            
            /// Small Body Shape
            let smallBodyShape3 = UIBezierPath()
            smallBodyShape3.move(to: CGPoint(x: 45, y: 36.47))
            smallBodyShape3.addCurve(to: CGPoint(x: 45, y: 36.5), controlPoint1: CGPoint(x: 45, y: 36.49), controlPoint2: CGPoint(x: 45, y: 36.5))
            smallBodyShape3.addLine(to: CGPoint(x: 25, y: 35.75))
            smallBodyShape3.addLine(to: CGPoint(x: 0, y: 35.5))
            smallBodyShape3.addLine(to: CGPoint(x: 0, y: 25))
            smallBodyShape3.addCurve(to: CGPoint(x: 5, y: 5), controlPoint1: CGPoint(x: 0, y: 25), controlPoint2: CGPoint(x: 0, y: 10))
            smallBodyShape3.addCurve(to: CGPoint(x: 25, y: 0), controlPoint1: CGPoint(x: 10, y: 0), controlPoint2: CGPoint(x: 25, y: 0))
            smallBodyShape3.addCurve(to: CGPoint(x: 45, y: 5), controlPoint1: CGPoint(x: 25, y: 0), controlPoint2: CGPoint(x: 40, y: 0))
            smallBodyShape3.addCurve(to: CGPoint(x: 50, y: 27), controlPoint1: CGPoint(x: 50, y: 10), controlPoint2: CGPoint(x: 50, y: 27))
            smallBodyShape3.addLine(to: CGPoint(x: 50, y: 36))
            smallBodyShape3.addLine(to: CGPoint(x: 45, y: 35.95))
            smallBodyShape3.addCurve(to: CGPoint(x: 45, y: 24.5), controlPoint1: CGPoint(x: 45, y: 34.47), controlPoint2: CGPoint(x: 45, y: 30.13))
            smallBodyShape3.addCurve(to: CGPoint(x: 41, y: 7.5), controlPoint1: CGPoint(x: 45, y: 17.5), controlPoint2: CGPoint(x: 46.5, y: 14))
            smallBodyShape3.addCurve(to: CGPoint(x: 25, y: 5), controlPoint1: CGPoint(x: 39.15, y: 5.32), controlPoint2: CGPoint(x: 25, y: 5))
            smallBodyShape3.addCurve(to: CGPoint(x: 9, y: 8.5), controlPoint1: CGPoint(x: 25, y: 5), controlPoint2: CGPoint(x: 12.5, y: 5))
            smallBodyShape3.addCurve(to: CGPoint(x: 5, y: 23.06), controlPoint1: CGPoint(x: 3.5, y: 14), controlPoint2: CGPoint(x: 5, y: 19.5))
            smallBodyShape3.addCurve(to: CGPoint(x: 5, y: 35), controlPoint1: CGPoint(x: 5, y: 26.61), controlPoint2: CGPoint(x: 5, y: 35))
            smallBodyShape3.addLine(to: CGPoint(x: 25, y: 35.75))
            smallBodyShape3.addLine(to: CGPoint(x: 45, y: 35.95))
            smallBodyShape3.addCurve(to: CGPoint(x: 45, y: 35.95), controlPoint1: CGPoint(x: 45, y: 36.4), controlPoint2: CGPoint(x: 45, y: 36.22))
            smallBodyShape3.close()
            smallBodyShape3.move(to: CGPoint(x: 45, y: 36.47))
            context.saveGState()
            context.translateBy(x: 0, y: 30)
            smallBodyShape3.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallBodyShape3.fill()
            context.restoreGState()
            
            context.restoreGState()
        }
        
        context.restoreGState()
    }
    
    class func drawButtonHelp(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 400), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 400), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 400)
        
        /// Structure
        do {
            context.saveGState()
            context.translateBy(x: 25, y: 37)
            
            /// Combined Shape
            let combinedShape = UIBezierPath()
            combinedShape.move(to: CGPoint(x: 198.25, y: 218.7))
            combinedShape.addCurve(to: CGPoint(x: 200, y: 200), controlPoint1: CGPoint(x: 199.4, y: 212.64), controlPoint2: CGPoint(x: 200, y: 206.39))
            combinedShape.addCurve(to: CGPoint(x: 174.57, y: 133.37), controlPoint1: CGPoint(x: 200, y: 174.41), controlPoint2: CGPoint(x: 190.38, y: 151.06))
            combinedShape.addLine(to: CGPoint(x: 217.16, y: 87.7))
            combinedShape.addCurve(to: CGPoint(x: 250, y: 100), controlPoint1: CGPoint(x: 225.94, y: 95.36), controlPoint2: CGPoint(x: 237.43, y: 100))
            combinedShape.addCurve(to: CGPoint(x: 300, y: 50), controlPoint1: CGPoint(x: 277.61, y: 100), controlPoint2: CGPoint(x: 300, y: 77.61))
            combinedShape.addCurve(to: CGPoint(x: 250, y: 0), controlPoint1: CGPoint(x: 300, y: 22.39), controlPoint2: CGPoint(x: 277.61, y: 0))
            combinedShape.addCurve(to: CGPoint(x: 200, y: 50), controlPoint1: CGPoint(x: 222.39, y: 0), controlPoint2: CGPoint(x: 200, y: 22.39))
            combinedShape.addCurve(to: CGPoint(x: 210.3, y: 80.39), controlPoint1: CGPoint(x: 200, y: 61.43), controlPoint2: CGPoint(x: 203.84, y: 71.97))
            combinedShape.addLine(to: CGPoint(x: 167.53, y: 126.25))
            combinedShape.addCurve(to: CGPoint(x: 100, y: 100), controlPoint1: CGPoint(x: 149.74, y: 109.95), controlPoint2: CGPoint(x: 126.03, y: 100))
            combinedShape.addCurve(to: CGPoint(x: 0, y: 200), controlPoint1: CGPoint(x: 44.77, y: 100), controlPoint2: CGPoint(x: 0, y: 144.77))
            combinedShape.addCurve(to: CGPoint(x: 100, y: 300), controlPoint1: CGPoint(x: 0, y: 255.23), controlPoint2: CGPoint(x: 44.77, y: 300))
            combinedShape.addCurve(to: CGPoint(x: 195.9, y: 228.42), controlPoint1: CGPoint(x: 145.35, y: 300), controlPoint2: CGPoint(x: 183.66, y: 269.81))
            combinedShape.addLine(to: CGPoint(x: 250.63, y: 242.07))
            combinedShape.addCurve(to: CGPoint(x: 250, y: 250), controlPoint1: CGPoint(x: 250.21, y: 244.65), controlPoint2: CGPoint(x: 250, y: 247.3))
            combinedShape.addCurve(to: CGPoint(x: 300, y: 300), controlPoint1: CGPoint(x: 250, y: 277.61), controlPoint2: CGPoint(x: 272.39, y: 300))
            combinedShape.addCurve(to: CGPoint(x: 350, y: 250), controlPoint1: CGPoint(x: 327.61, y: 300), controlPoint2: CGPoint(x: 350, y: 277.61))
            combinedShape.addCurve(to: CGPoint(x: 300, y: 200), controlPoint1: CGPoint(x: 350, y: 222.39), controlPoint2: CGPoint(x: 327.61, y: 200))
            combinedShape.addCurve(to: CGPoint(x: 253.19, y: 232.4), controlPoint1: CGPoint(x: 278.58, y: 200), controlPoint2: CGPoint(x: 260.31, y: 213.47))
            combinedShape.addLine(to: CGPoint(x: 198.25, y: 218.7))
            combinedShape.close()
            combinedShape.move(to: CGPoint(x: 300, y: 290))
            combinedShape.addCurve(to: CGPoint(x: 340, y: 250), controlPoint1: CGPoint(x: 322.09, y: 290), controlPoint2: CGPoint(x: 340, y: 272.09))
            combinedShape.addCurve(to: CGPoint(x: 300, y: 210), controlPoint1: CGPoint(x: 340, y: 227.91), controlPoint2: CGPoint(x: 322.09, y: 210))
            combinedShape.addCurve(to: CGPoint(x: 260, y: 250), controlPoint1: CGPoint(x: 277.91, y: 210), controlPoint2: CGPoint(x: 260, y: 227.91))
            combinedShape.addCurve(to: CGPoint(x: 300, y: 290), controlPoint1: CGPoint(x: 260, y: 272.09), controlPoint2: CGPoint(x: 277.91, y: 290))
            combinedShape.close()
            combinedShape.move(to: CGPoint(x: 250, y: 90))
            combinedShape.addCurve(to: CGPoint(x: 290, y: 50), controlPoint1: CGPoint(x: 272.09, y: 90), controlPoint2: CGPoint(x: 290, y: 72.09))
            combinedShape.addCurve(to: CGPoint(x: 250, y: 10), controlPoint1: CGPoint(x: 290, y: 27.91), controlPoint2: CGPoint(x: 272.09, y: 10))
            combinedShape.addCurve(to: CGPoint(x: 210, y: 50), controlPoint1: CGPoint(x: 227.91, y: 10), controlPoint2: CGPoint(x: 210, y: 27.91))
            combinedShape.addCurve(to: CGPoint(x: 250, y: 90), controlPoint1: CGPoint(x: 210, y: 72.09), controlPoint2: CGPoint(x: 227.91, y: 90))
            combinedShape.close()
            combinedShape.move(to: CGPoint(x: 100, y: 290))
            combinedShape.addCurve(to: CGPoint(x: 190, y: 200), controlPoint1: CGPoint(x: 149.71, y: 290), controlPoint2: CGPoint(x: 190, y: 249.71))
            combinedShape.addCurve(to: CGPoint(x: 100, y: 110), controlPoint1: CGPoint(x: 190, y: 150.29), controlPoint2: CGPoint(x: 149.71, y: 110))
            combinedShape.addCurve(to: CGPoint(x: 10, y: 200), controlPoint1: CGPoint(x: 50.29, y: 110), controlPoint2: CGPoint(x: 10, y: 150.29))
            combinedShape.addCurve(to: CGPoint(x: 100, y: 290), controlPoint1: CGPoint(x: 10, y: 249.71), controlPoint2: CGPoint(x: 50.29, y: 290))
            combinedShape.close()
            combinedShape.move(to: CGPoint(x: 100, y: 290))
            context.saveGState()
            combinedShape.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            combinedShape.fill()
            context.restoreGState()
            
            context.restoreGState()
        }
        /// Big Peer
        do {
            context.saveGState()
            context.translateBy(x: 75, y: 187)
            
            /// Small Head Shape
            let smallHeadShape = UIBezierPath()
            smallHeadShape.move(to: CGPoint(x: 30, y: 60))
            smallHeadShape.addCurve(to: CGPoint(x: 60, y: 30), controlPoint1: CGPoint(x: 46.57, y: 60), controlPoint2: CGPoint(x: 60, y: 46.57))
            smallHeadShape.addCurve(to: CGPoint(x: 30, y: 0), controlPoint1: CGPoint(x: 60, y: 13.43), controlPoint2: CGPoint(x: 46.57, y: 0))
            smallHeadShape.addCurve(to: CGPoint(x: 0, y: 30), controlPoint1: CGPoint(x: 13.43, y: 0), controlPoint2: CGPoint(x: 0, y: 13.43))
            smallHeadShape.addCurve(to: CGPoint(x: 30, y: 60), controlPoint1: CGPoint(x: 0, y: 46.57), controlPoint2: CGPoint(x: 13.43, y: 60))
            smallHeadShape.close()
            smallHeadShape.move(to: CGPoint(x: 30, y: 50))
            smallHeadShape.addCurve(to: CGPoint(x: 50, y: 30), controlPoint1: CGPoint(x: 41.05, y: 50), controlPoint2: CGPoint(x: 50, y: 41.05))
            smallHeadShape.addCurve(to: CGPoint(x: 30, y: 10), controlPoint1: CGPoint(x: 50, y: 18.95), controlPoint2: CGPoint(x: 41.05, y: 10))
            smallHeadShape.addCurve(to: CGPoint(x: 10, y: 30), controlPoint1: CGPoint(x: 18.95, y: 10), controlPoint2: CGPoint(x: 10, y: 18.95))
            smallHeadShape.addCurve(to: CGPoint(x: 30, y: 50), controlPoint1: CGPoint(x: 10, y: 41.05), controlPoint2: CGPoint(x: 18.95, y: 50))
            smallHeadShape.close()
            smallHeadShape.move(to: CGPoint(x: 30, y: 50))
            context.saveGState()
            context.translateBy(x: 20, y: 0)
            smallHeadShape.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallHeadShape.fill()
            context.restoreGState()
            
            /// Small Body Shape
            let smallBodyShape = UIBezierPath()
            smallBodyShape.move(to: CGPoint(x: 10, y: 74.98))
            smallBodyShape.addCurve(to: CGPoint(x: 10, y: 75.5), controlPoint1: CGPoint(x: 10, y: 75.32), controlPoint2: CGPoint(x: 10, y: 75.5))
            smallBodyShape.addCurve(to: CGPoint(x: 13.42, y: 76.34), controlPoint1: CGPoint(x: 10, y: 75.5), controlPoint2: CGPoint(x: 11.29, y: 75.82))
            smallBodyShape.addCurve(to: CGPoint(x: 50, y: 90), controlPoint1: CGPoint(x: 27.62, y: 81.95), controlPoint2: CGPoint(x: 48.25, y: 89.98))
            smallBodyShape.addCurve(to: CGPoint(x: 78.51, y: 80.08), controlPoint1: CGPoint(x: 51.44, y: 90.01), controlPoint2: CGPoint(x: 65.62, y: 84.87))
            smallBodyShape.addCurve(to: CGPoint(x: 90, y: 78), controlPoint1: CGPoint(x: 84.99, y: 78.93), controlPoint2: CGPoint(x: 90, y: 78))
            smallBodyShape.addCurve(to: CGPoint(x: 90, y: 75.78), controlPoint1: CGPoint(x: 90, y: 78), controlPoint2: CGPoint(x: 90, y: 77.19))
            smallBodyShape.addCurve(to: CGPoint(x: 100, y: 72), controlPoint1: CGPoint(x: 95.88, y: 73.57), controlPoint2: CGPoint(x: 100, y: 72))
            smallBodyShape.addLine(to: CGPoint(x: 100, y: 54))
            smallBodyShape.addCurve(to: CGPoint(x: 90, y: 10), controlPoint1: CGPoint(x: 100, y: 54), controlPoint2: CGPoint(x: 100, y: 20))
            smallBodyShape.addCurve(to: CGPoint(x: 50, y: 0), controlPoint1: CGPoint(x: 80, y: 0), controlPoint2: CGPoint(x: 50, y: 0))
            smallBodyShape.addCurve(to: CGPoint(x: 10, y: 10), controlPoint1: CGPoint(x: 50, y: 0), controlPoint2: CGPoint(x: 20, y: 0))
            smallBodyShape.addCurve(to: CGPoint(x: 0, y: 50), controlPoint1: CGPoint(x: 0, y: 20), controlPoint2: CGPoint(x: 0, y: 50))
            smallBodyShape.addLine(to: CGPoint(x: 0, y: 71))
            smallBodyShape.addCurve(to: CGPoint(x: 10, y: 74.98), controlPoint1: CGPoint(x: 0, y: 71), controlPoint2: CGPoint(x: 4.12, y: 72.65))
            smallBodyShape.close()
            smallBodyShape.move(to: CGPoint(x: 10, y: 74.98))
            smallBodyShape.addCurve(to: CGPoint(x: 10, y: 40), controlPoint1: CGPoint(x: 10, y: 71.11), controlPoint2: CGPoint(x: 10, y: 46.54))
            smallBodyShape.addCurve(to: CGPoint(x: 53, y: 65), controlPoint1: CGPoint(x: 10, y: 35.97), controlPoint2: CGPoint(x: 47, y: 75.5))
            smallBodyShape.addCurve(to: CGPoint(x: 18, y: 17), controlPoint1: CGPoint(x: 59, y: 54.5), controlPoint2: CGPoint(x: 13.24, y: 21.76))
            smallBodyShape.addCurve(to: CGPoint(x: 50, y: 10), controlPoint1: CGPoint(x: 24.99, y: 10.01), controlPoint2: CGPoint(x: 50, y: 10))
            smallBodyShape.addCurve(to: CGPoint(x: 82, y: 15), controlPoint1: CGPoint(x: 50, y: 10), controlPoint2: CGPoint(x: 78.31, y: 10.64))
            smallBodyShape.addCurve(to: CGPoint(x: 90, y: 49), controlPoint1: CGPoint(x: 93, y: 28), controlPoint2: CGPoint(x: 90, y: 35))
            smallBodyShape.addCurve(to: CGPoint(x: 90, y: 75.78), controlPoint1: CGPoint(x: 90, y: 59.76), controlPoint2: CGPoint(x: 90, y: 71.1))
            smallBodyShape.addCurve(to: CGPoint(x: 78.51, y: 80.08), controlPoint1: CGPoint(x: 86.6, y: 77.06), controlPoint2: CGPoint(x: 82.62, y: 78.55))
            smallBodyShape.addCurve(to: CGPoint(x: 50, y: 84.5), controlPoint1: CGPoint(x: 67.63, y: 82.02), controlPoint2: CGPoint(x: 52.58, y: 84.6))
            smallBodyShape.addCurve(to: CGPoint(x: 13.42, y: 76.34), controlPoint1: CGPoint(x: 46.66, y: 84.37), controlPoint2: CGPoint(x: 22.48, y: 78.55))
            smallBodyShape.addCurve(to: CGPoint(x: 10, y: 74.98), controlPoint1: CGPoint(x: 12.23, y: 75.87), controlPoint2: CGPoint(x: 11.08, y: 75.41))
            smallBodyShape.close()
            smallBodyShape.move(to: CGPoint(x: 10, y: 74.98))
            context.saveGState()
            context.translateBy(x: 0, y: 60)
            smallBodyShape.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallBodyShape.fill()
            context.restoreGState()
            
            context.restoreGState()
        }
        /// Small Peer
        do {
            context.saveGState()
            context.translateBy(x: 249, y: 62)
            
            /// Small Head Shape
            let smallHeadShape2 = UIBezierPath()
            smallHeadShape2.move(to: CGPoint(x: 15, y: 30))
            smallHeadShape2.addCurve(to: CGPoint(x: 30, y: 15), controlPoint1: CGPoint(x: 23.28, y: 30), controlPoint2: CGPoint(x: 30, y: 23.28))
            smallHeadShape2.addCurve(to: CGPoint(x: 15, y: 0), controlPoint1: CGPoint(x: 30, y: 6.72), controlPoint2: CGPoint(x: 23.28, y: 0))
            smallHeadShape2.addCurve(to: CGPoint(x: 0, y: 15), controlPoint1: CGPoint(x: 6.72, y: 0), controlPoint2: CGPoint(x: 0, y: 6.72))
            smallHeadShape2.addCurve(to: CGPoint(x: 15, y: 30), controlPoint1: CGPoint(x: 0, y: 23.28), controlPoint2: CGPoint(x: 6.72, y: 30))
            smallHeadShape2.close()
            smallHeadShape2.move(to: CGPoint(x: 15, y: 25))
            smallHeadShape2.addCurve(to: CGPoint(x: 25, y: 15), controlPoint1: CGPoint(x: 20.52, y: 25), controlPoint2: CGPoint(x: 25, y: 20.52))
            smallHeadShape2.addCurve(to: CGPoint(x: 15, y: 5), controlPoint1: CGPoint(x: 25, y: 9.48), controlPoint2: CGPoint(x: 20.52, y: 5))
            smallHeadShape2.addCurve(to: CGPoint(x: 5, y: 15), controlPoint1: CGPoint(x: 9.48, y: 5), controlPoint2: CGPoint(x: 5, y: 9.48))
            smallHeadShape2.addCurve(to: CGPoint(x: 15, y: 25), controlPoint1: CGPoint(x: 5, y: 20.52), controlPoint2: CGPoint(x: 9.48, y: 25))
            smallHeadShape2.close()
            smallHeadShape2.move(to: CGPoint(x: 15, y: 25))
            context.saveGState()
            context.translateBy(x: 10, y: 0)
            smallHeadShape2.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallHeadShape2.fill()
            context.restoreGState()
            
            /// Small Body Shape
            let smallBodyShape2 = UIBezierPath()
            smallBodyShape2.move(to: CGPoint(x: 45, y: 36.47))
            smallBodyShape2.addCurve(to: CGPoint(x: 45, y: 36.5), controlPoint1: CGPoint(x: 45, y: 36.49), controlPoint2: CGPoint(x: 45, y: 36.5))
            smallBodyShape2.addLine(to: CGPoint(x: 25, y: 35.75))
            smallBodyShape2.addLine(to: CGPoint(x: 0, y: 35.5))
            smallBodyShape2.addLine(to: CGPoint(x: 0, y: 25))
            smallBodyShape2.addCurve(to: CGPoint(x: 5, y: 5), controlPoint1: CGPoint(x: 0, y: 25), controlPoint2: CGPoint(x: 0, y: 10))
            smallBodyShape2.addCurve(to: CGPoint(x: 25, y: 0), controlPoint1: CGPoint(x: 10, y: 0), controlPoint2: CGPoint(x: 25, y: 0))
            smallBodyShape2.addCurve(to: CGPoint(x: 45, y: 5), controlPoint1: CGPoint(x: 25, y: 0), controlPoint2: CGPoint(x: 40, y: 0))
            smallBodyShape2.addCurve(to: CGPoint(x: 50, y: 27), controlPoint1: CGPoint(x: 50, y: 10), controlPoint2: CGPoint(x: 50, y: 27))
            smallBodyShape2.addLine(to: CGPoint(x: 50, y: 36))
            smallBodyShape2.addLine(to: CGPoint(x: 45, y: 35.95))
            smallBodyShape2.addCurve(to: CGPoint(x: 45, y: 24.5), controlPoint1: CGPoint(x: 45, y: 34.47), controlPoint2: CGPoint(x: 45, y: 30.13))
            smallBodyShape2.addCurve(to: CGPoint(x: 41, y: 7.5), controlPoint1: CGPoint(x: 45, y: 17.5), controlPoint2: CGPoint(x: 46.5, y: 14))
            smallBodyShape2.addCurve(to: CGPoint(x: 25, y: 5), controlPoint1: CGPoint(x: 39.15, y: 5.32), controlPoint2: CGPoint(x: 25, y: 5))
            smallBodyShape2.addCurve(to: CGPoint(x: 9, y: 8.5), controlPoint1: CGPoint(x: 25, y: 5), controlPoint2: CGPoint(x: 12.5, y: 5))
            smallBodyShape2.addCurve(to: CGPoint(x: 5, y: 23.06), controlPoint1: CGPoint(x: 3.5, y: 14), controlPoint2: CGPoint(x: 5, y: 19.5))
            smallBodyShape2.addCurve(to: CGPoint(x: 5, y: 35), controlPoint1: CGPoint(x: 5, y: 26.61), controlPoint2: CGPoint(x: 5, y: 35))
            smallBodyShape2.addLine(to: CGPoint(x: 25, y: 35.75))
            smallBodyShape2.addLine(to: CGPoint(x: 45, y: 35.95))
            smallBodyShape2.addCurve(to: CGPoint(x: 45, y: 35.95), controlPoint1: CGPoint(x: 45, y: 36.4), controlPoint2: CGPoint(x: 45, y: 36.22))
            smallBodyShape2.close()
            smallBodyShape2.move(to: CGPoint(x: 45, y: 36.47))
            context.saveGState()
            context.translateBy(x: 0, y: 30)
            smallBodyShape2.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallBodyShape2.fill()
            context.restoreGState()
            
            context.restoreGState()
        }
        /// Small Peer
        do {
            context.saveGState()
            context.translateBy(x: 300, y: 261)
            
            /// Small Head Shape
            let smallHeadShape3 = UIBezierPath()
            smallHeadShape3.move(to: CGPoint(x: 15, y: 30))
            smallHeadShape3.addCurve(to: CGPoint(x: 30, y: 15), controlPoint1: CGPoint(x: 23.28, y: 30), controlPoint2: CGPoint(x: 30, y: 23.28))
            smallHeadShape3.addCurve(to: CGPoint(x: 15, y: 0), controlPoint1: CGPoint(x: 30, y: 6.72), controlPoint2: CGPoint(x: 23.28, y: 0))
            smallHeadShape3.addCurve(to: CGPoint(x: 0, y: 15), controlPoint1: CGPoint(x: 6.72, y: 0), controlPoint2: CGPoint(x: 0, y: 6.72))
            smallHeadShape3.addCurve(to: CGPoint(x: 15, y: 30), controlPoint1: CGPoint(x: 0, y: 23.28), controlPoint2: CGPoint(x: 6.72, y: 30))
            smallHeadShape3.close()
            smallHeadShape3.move(to: CGPoint(x: 15, y: 25))
            smallHeadShape3.addCurve(to: CGPoint(x: 25, y: 15), controlPoint1: CGPoint(x: 20.52, y: 25), controlPoint2: CGPoint(x: 25, y: 20.52))
            smallHeadShape3.addCurve(to: CGPoint(x: 15, y: 5), controlPoint1: CGPoint(x: 25, y: 9.48), controlPoint2: CGPoint(x: 20.52, y: 5))
            smallHeadShape3.addCurve(to: CGPoint(x: 5, y: 15), controlPoint1: CGPoint(x: 9.48, y: 5), controlPoint2: CGPoint(x: 5, y: 9.48))
            smallHeadShape3.addCurve(to: CGPoint(x: 15, y: 25), controlPoint1: CGPoint(x: 5, y: 20.52), controlPoint2: CGPoint(x: 9.48, y: 25))
            smallHeadShape3.close()
            smallHeadShape3.move(to: CGPoint(x: 15, y: 25))
            context.saveGState()
            context.translateBy(x: 10, y: 0)
            smallHeadShape3.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallHeadShape3.fill()
            context.restoreGState()
            
            /// Small Body Shape
            let smallBodyShape3 = UIBezierPath()
            smallBodyShape3.move(to: CGPoint(x: 45, y: 36.47))
            smallBodyShape3.addCurve(to: CGPoint(x: 45, y: 36.5), controlPoint1: CGPoint(x: 45, y: 36.49), controlPoint2: CGPoint(x: 45, y: 36.5))
            smallBodyShape3.addLine(to: CGPoint(x: 25, y: 35.75))
            smallBodyShape3.addLine(to: CGPoint(x: 0, y: 35.5))
            smallBodyShape3.addLine(to: CGPoint(x: 0, y: 25))
            smallBodyShape3.addCurve(to: CGPoint(x: 5, y: 5), controlPoint1: CGPoint(x: 0, y: 25), controlPoint2: CGPoint(x: 0, y: 10))
            smallBodyShape3.addCurve(to: CGPoint(x: 25, y: 0), controlPoint1: CGPoint(x: 10, y: 0), controlPoint2: CGPoint(x: 25, y: 0))
            smallBodyShape3.addCurve(to: CGPoint(x: 45, y: 5), controlPoint1: CGPoint(x: 25, y: 0), controlPoint2: CGPoint(x: 40, y: 0))
            smallBodyShape3.addCurve(to: CGPoint(x: 50, y: 27), controlPoint1: CGPoint(x: 50, y: 10), controlPoint2: CGPoint(x: 50, y: 27))
            smallBodyShape3.addLine(to: CGPoint(x: 50, y: 36))
            smallBodyShape3.addLine(to: CGPoint(x: 45, y: 35.95))
            smallBodyShape3.addCurve(to: CGPoint(x: 45, y: 24.5), controlPoint1: CGPoint(x: 45, y: 34.47), controlPoint2: CGPoint(x: 45, y: 30.13))
            smallBodyShape3.addCurve(to: CGPoint(x: 41, y: 7.5), controlPoint1: CGPoint(x: 45, y: 17.5), controlPoint2: CGPoint(x: 46.5, y: 14))
            smallBodyShape3.addCurve(to: CGPoint(x: 25, y: 5), controlPoint1: CGPoint(x: 39.15, y: 5.32), controlPoint2: CGPoint(x: 25, y: 5))
            smallBodyShape3.addCurve(to: CGPoint(x: 9, y: 8.5), controlPoint1: CGPoint(x: 25, y: 5), controlPoint2: CGPoint(x: 12.5, y: 5))
            smallBodyShape3.addCurve(to: CGPoint(x: 5, y: 23.06), controlPoint1: CGPoint(x: 3.5, y: 14), controlPoint2: CGPoint(x: 5, y: 19.5))
            smallBodyShape3.addCurve(to: CGPoint(x: 5, y: 35), controlPoint1: CGPoint(x: 5, y: 26.61), controlPoint2: CGPoint(x: 5, y: 35))
            smallBodyShape3.addLine(to: CGPoint(x: 25, y: 35.75))
            smallBodyShape3.addLine(to: CGPoint(x: 45, y: 35.95))
            smallBodyShape3.addCurve(to: CGPoint(x: 45, y: 35.95), controlPoint1: CGPoint(x: 45, y: 36.4), controlPoint2: CGPoint(x: 45, y: 36.22))
            smallBodyShape3.close()
            smallBodyShape3.move(to: CGPoint(x: 45, y: 36.47))
            context.saveGState()
            context.translateBy(x: 0, y: 30)
            smallBodyShape3.usesEvenOddFillRule = true
            UIColor(hue: 0.756, saturation: 0.675, brightness: 0.976, alpha: 1).setFill()
            smallBodyShape3.fill()
            context.restoreGState()
            
            context.restoreGState()
        }
        
        context.restoreGState()
    }
    
    class func drawEnthalter2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 200, resizedFrame.height / 200)
        
        /// protection
        context.saveGState()
        context.setShadow(
            offset: CGSize(width: 0 * resizedShadowScale, height: 2 * resizedShadowScale),
            blur: 2 * resizedShadowScale,
            color: UIColor(white: 0, alpha: 0.5).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        do {
            context.translateBy(x: 29, y: 10)
            
            /// Capa_1
            do {
                context.saveGState()
                
                /// Shape
                let shape = UIBezierPath()
                shape.move(to: CGPoint(x: 140.27, y: 11.76))
                shape.addLine(to: CGPoint(x: 94.88, y: 0.1))
                shape.addCurve(to: CGPoint(x: 94.81, y: 0.09), controlPoint1: CGPoint(x: 94.86, y: 0.1), controlPoint2: CGPoint(x: 94.83, y: 0.09))
                shape.addCurve(to: CGPoint(x: 94.63, y: 0.05), controlPoint1: CGPoint(x: 94.75, y: 0.07), controlPoint2: CGPoint(x: 94.69, y: 0.06))
                shape.addCurve(to: CGPoint(x: 94.44, y: 0.02), controlPoint1: CGPoint(x: 94.57, y: 0.04), controlPoint2: CGPoint(x: 94.51, y: 0.03))
                shape.addCurve(to: CGPoint(x: 94.26, y: 0.01), controlPoint1: CGPoint(x: 94.38, y: 0.02), controlPoint2: CGPoint(x: 94.32, y: 0.01))
                shape.addCurve(to: CGPoint(x: 94.07, y: 0), controlPoint1: CGPoint(x: 94.2, y: 0.01), controlPoint2: CGPoint(x: 94.14, y: 0))
                shape.addCurve(to: CGPoint(x: 93.89, y: 0.01), controlPoint1: CGPoint(x: 94.01, y: 0), controlPoint2: CGPoint(x: 93.95, y: 0.01))
                shape.addCurve(to: CGPoint(x: 93.7, y: 0.02), controlPoint1: CGPoint(x: 93.83, y: 0.01), controlPoint2: CGPoint(x: 93.76, y: 0.02))
                shape.addCurve(to: CGPoint(x: 93.52, y: 0.05), controlPoint1: CGPoint(x: 93.64, y: 0.03), controlPoint2: CGPoint(x: 93.58, y: 0.04))
                shape.addCurve(to: CGPoint(x: 93.34, y: 0.09), controlPoint1: CGPoint(x: 93.46, y: 0.06), controlPoint2: CGPoint(x: 93.4, y: 0.07))
                shape.addCurve(to: CGPoint(x: 93.27, y: 0.1), controlPoint1: CGPoint(x: 93.31, y: 0.09), controlPoint2: CGPoint(x: 93.29, y: 0.1))
                shape.addLine(to: CGPoint(x: 48.68, y: 11.55))
                shape.addLine(to: CGPoint(x: 4.09, y: 0.1))
                shape.addCurve(to: CGPoint(x: 1.27, y: 0.7), controlPoint1: CGPoint(x: 3.11, y: -0.15), controlPoint2: CGPoint(x: 2.07, y: 0.07))
                shape.addCurve(to: CGPoint(x: 0, y: 3.34), controlPoint1: CGPoint(x: 0.47, y: 1.34), controlPoint2: CGPoint(x: 0, y: 2.31))
                shape.addLine(to: CGPoint(x: 0, y: 21.35))
                shape.addLine(to: CGPoint(x: 0, y: 144.28))
                shape.addLine(to: CGPoint(x: 0, y: 162.3))
                shape.addLine(to: CGPoint(x: 0, y: 177.66))
                shape.addCurve(to: CGPoint(x: 3.28, y: 181), controlPoint1: CGPoint(x: 0, y: 179.51), controlPoint2: CGPoint(x: 1.47, y: 181))
                shape.addCurve(to: CGPoint(x: 6.57, y: 177.66), controlPoint1: CGPoint(x: 5.1, y: 181), controlPoint2: CGPoint(x: 6.57, y: 179.51))
                shape.addLine(to: CGPoint(x: 6.57, y: 164.89))
                shape.addLine(to: CGPoint(x: 45.39, y: 154.92))
                shape.addLine(to: CGPoint(x: 45.39, y: 166.01))
                shape.addCurve(to: CGPoint(x: 48.68, y: 169.34), controlPoint1: CGPoint(x: 45.39, y: 167.85), controlPoint2: CGPoint(x: 46.87, y: 169.34))
                shape.addCurve(to: CGPoint(x: 51.96, y: 166.01), controlPoint1: CGPoint(x: 50.49, y: 169.34), controlPoint2: CGPoint(x: 51.96, y: 167.85))
                shape.addLine(to: CGPoint(x: 51.96, y: 154.92))
                shape.addLine(to: CGPoint(x: 90.79, y: 164.89))
                shape.addLine(to: CGPoint(x: 90.79, y: 177.66))
                shape.addCurve(to: CGPoint(x: 94.07, y: 181), controlPoint1: CGPoint(x: 90.79, y: 179.51), controlPoint2: CGPoint(x: 92.26, y: 181))
                shape.addCurve(to: CGPoint(x: 97.36, y: 177.66), controlPoint1: CGPoint(x: 95.89, y: 181), controlPoint2: CGPoint(x: 97.36, y: 179.51))
                shape.addLine(to: CGPoint(x: 97.36, y: 164.89))
                shape.addLine(to: CGPoint(x: 136.18, y: 154.92))
                shape.addLine(to: CGPoint(x: 136.18, y: 166.01))
                shape.addCurve(to: CGPoint(x: 139.47, y: 169.34), controlPoint1: CGPoint(x: 136.18, y: 167.85), controlPoint2: CGPoint(x: 137.65, y: 169.34))
                shape.addCurve(to: CGPoint(x: 142.75, y: 166.01), controlPoint1: CGPoint(x: 141.28, y: 169.34), controlPoint2: CGPoint(x: 142.75, y: 167.85))
                shape.addLine(to: CGPoint(x: 142.75, y: 150.64))
                shape.addLine(to: CGPoint(x: 142.75, y: 132.62))
                shape.addLine(to: CGPoint(x: 142.75, y: 33.01))
                shape.addLine(to: CGPoint(x: 142.75, y: 14.99))
                shape.addCurve(to: CGPoint(x: 140.27, y: 11.76), controlPoint1: CGPoint(x: 142.75, y: 13.47), controlPoint2: CGPoint(x: 141.73, y: 12.13))
                shape.close()
                shape.move(to: CGPoint(x: 6.57, y: 25.63))
                shape.addLine(to: CGPoint(x: 45.39, y: 35.61))
                shape.addLine(to: CGPoint(x: 45.39, y: 130.03))
                shape.addLine(to: CGPoint(x: 6.57, y: 140))
                shape.addLine(to: CGPoint(x: 6.57, y: 25.63))
                shape.addLine(to: CGPoint(x: 6.57, y: 25.63))
                shape.close()
                shape.move(to: CGPoint(x: 51.96, y: 35.61))
                shape.addLine(to: CGPoint(x: 90.79, y: 25.63))
                shape.addLine(to: CGPoint(x: 90.79, y: 140))
                shape.addLine(to: CGPoint(x: 51.96, y: 130.03))
                shape.addLine(to: CGPoint(x: 51.96, y: 35.61))
                shape.close()
                shape.move(to: CGPoint(x: 97.36, y: 25.63))
                shape.addLine(to: CGPoint(x: 136.18, y: 35.61))
                shape.addLine(to: CGPoint(x: 136.18, y: 130.03))
                shape.addLine(to: CGPoint(x: 97.36, y: 140))
                shape.addLine(to: CGPoint(x: 97.36, y: 25.63))
                shape.addLine(to: CGPoint(x: 97.36, y: 25.63))
                shape.close()
                shape.move(to: CGPoint(x: 136.18, y: 28.72))
                shape.addLine(to: CGPoint(x: 97.36, y: 18.75))
                shape.addLine(to: CGPoint(x: 97.36, y: 7.62))
                shape.addLine(to: CGPoint(x: 136.18, y: 17.59))
                shape.addLine(to: CGPoint(x: 136.18, y: 28.72))
                shape.addLine(to: CGPoint(x: 136.18, y: 28.72))
                shape.close()
                shape.move(to: CGPoint(x: 90.79, y: 18.75))
                shape.addLine(to: CGPoint(x: 51.96, y: 28.72))
                shape.addLine(to: CGPoint(x: 51.96, y: 17.59))
                shape.addLine(to: CGPoint(x: 90.79, y: 7.62))
                shape.addLine(to: CGPoint(x: 90.79, y: 18.75))
                shape.close()
                shape.move(to: CGPoint(x: 45.39, y: 17.59))
                shape.addLine(to: CGPoint(x: 45.39, y: 28.72))
                shape.addLine(to: CGPoint(x: 6.57, y: 18.75))
                shape.addLine(to: CGPoint(x: 6.57, y: 7.62))
                shape.addLine(to: CGPoint(x: 45.39, y: 17.59))
                shape.close()
                shape.move(to: CGPoint(x: 6.57, y: 146.88))
                shape.addLine(to: CGPoint(x: 45.39, y: 136.91))
                shape.addLine(to: CGPoint(x: 45.39, y: 148.04))
                shape.addLine(to: CGPoint(x: 6.57, y: 158.01))
                shape.addLine(to: CGPoint(x: 6.57, y: 146.88))
                shape.addLine(to: CGPoint(x: 6.57, y: 146.88))
                shape.close()
                shape.move(to: CGPoint(x: 51.96, y: 136.91))
                shape.addLine(to: CGPoint(x: 90.79, y: 146.88))
                shape.addLine(to: CGPoint(x: 90.79, y: 158.01))
                shape.addLine(to: CGPoint(x: 51.96, y: 148.04))
                shape.addLine(to: CGPoint(x: 51.96, y: 136.91))
                shape.close()
                shape.move(to: CGPoint(x: 97.36, y: 146.88))
                shape.addLine(to: CGPoint(x: 136.18, y: 136.91))
                shape.addLine(to: CGPoint(x: 136.18, y: 148.04))
                shape.addLine(to: CGPoint(x: 97.36, y: 158.01))
                shape.addLine(to: CGPoint(x: 97.36, y: 146.88))
                shape.addLine(to: CGPoint(x: 97.36, y: 146.88))
                shape.close()
                shape.move(to: CGPoint(x: 97.36, y: 146.88))
                context.saveGState()
                shape.usesEvenOddFillRule = true
                UIColor(white: 0.667, alpha: 1).setFill()
                shape.fill()
                context.restoreGState()
                
                context.restoreGState()
            }
        }
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()
    }
    
    class func drawZuschauer2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)
        context.translateBy(x: 0, y: -1)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 200, resizedFrame.height / 200)
        
        /// Group 2
        context.saveGState()
        context.setShadow(
            offset: CGSize(width: 0 * resizedShadowScale, height: 2 * resizedShadowScale),
            blur: 2 * resizedShadowScale,
            color: UIColor(white: 0, alpha: 0.5).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        do {
            context.translateBy(x: 20, y: 13)
            
            /// people-3
            do {
                context.saveGState()
                
                /// Capa_1
                do {
                    context.saveGState()
                    
                    /// Group
                    do {
                        context.saveGState()
                        
                        /// Shape
                        let shape = UIBezierPath()
                        shape.move(to: CGPoint(x: 20.8, y: 41.55))
                        shape.addCurve(to: CGPoint(x: 41.6, y: 20.77), controlPoint1: CGPoint(x: 32.27, y: 41.55), controlPoint2: CGPoint(x: 41.6, y: 32.23))
                        shape.addCurve(to: CGPoint(x: 20.8, y: 0), controlPoint1: CGPoint(x: 41.6, y: 9.32), controlPoint2: CGPoint(x: 32.27, y: 0))
                        shape.addCurve(to: CGPoint(x: 0, y: 20.77), controlPoint1: CGPoint(x: 9.33, y: 0), controlPoint2: CGPoint(x: 0, y: 9.32))
                        shape.addCurve(to: CGPoint(x: 20.8, y: 41.55), controlPoint1: CGPoint(x: 0, y: 32.23), controlPoint2: CGPoint(x: 9.33, y: 41.55))
                        shape.close()
                        shape.move(to: CGPoint(x: 20.8, y: 41.55))
                        context.saveGState()
                        context.translateBy(x: 22.06, y: 0)
                        shape.usesEvenOddFillRule = true
                        UIColor(hue: 0.094, saturation: 0.736, brightness: 0.831, alpha: 1).setFill()
                        shape.fill()
                        context.restoreGState()
                        
                        /// Shape
                        let shape2 = UIBezierPath()
                        shape2.move(to: CGPoint(x: 85.01, y: 57.12))
                        shape2.addLine(to: CGPoint(x: 68.16, y: 4.98))
                        shape2.addCurve(to: CGPoint(x: 61.31, y: 0), controlPoint1: CGPoint(x: 67.25, y: 2.19), controlPoint2: CGPoint(x: 64.25, y: 0))
                        shape2.addLine(to: CGPoint(x: 58.79, y: 0))
                        shape2.addLine(to: CGPoint(x: 56.99, y: 0))
                        shape2.addLine(to: CGPoint(x: 28.28, y: 0))
                        shape2.addLine(to: CGPoint(x: 26.48, y: 0))
                        shape2.addLine(to: CGPoint(x: 23.96, y: 0))
                        shape2.addCurve(to: CGPoint(x: 17.12, y: 4.98), controlPoint1: CGPoint(x: 21.02, y: 0), controlPoint2: CGPoint(x: 18.02, y: 2.19))
                        shape2.addLine(to: CGPoint(x: 0.27, y: 57.12))
                        shape2.addCurve(to: CGPoint(x: 0.84, y: 61.41), controlPoint1: CGPoint(x: -0.23, y: 58.67), controlPoint2: CGPoint(x: -0.02, y: 60.23))
                        shape2.addCurve(to: CGPoint(x: 4.76, y: 63.27), controlPoint1: CGPoint(x: 1.7, y: 62.6), controlPoint2: CGPoint(x: 3.13, y: 63.27))
                        shape2.addLine(to: CGPoint(x: 9.07, y: 63.27))
                        shape2.addCurve(to: CGPoint(x: 15.92, y: 58.3), controlPoint1: CGPoint(x: 12.01, y: 63.27), controlPoint2: CGPoint(x: 15.02, y: 61.09))
                        shape2.addLine(to: CGPoint(x: 20.72, y: 43.44))
                        shape2.addLine(to: CGPoint(x: 20.72, y: 63.5))
                        shape2.addLine(to: CGPoint(x: 20.72, y: 64.47))
                        shape2.addLine(to: CGPoint(x: 20.72, y: 120.38))
                        shape2.addCurve(to: CGPoint(x: 30.32, y: 129.97), controlPoint1: CGPoint(x: 20.72, y: 125.67), controlPoint2: CGPoint(x: 25.03, y: 129.97))
                        shape2.addLine(to: CGPoint(x: 31, y: 129.97))
                        shape2.addCurve(to: CGPoint(x: 40.59, y: 120.38), controlPoint1: CGPoint(x: 36.29, y: 129.97), controlPoint2: CGPoint(x: 40.59, y: 125.67))
                        shape2.addLine(to: CGPoint(x: 40.59, y: 70.22))
                        shape2.addLine(to: CGPoint(x: 44.68, y: 70.22))
                        shape2.addLine(to: CGPoint(x: 44.68, y: 120.38))
                        shape2.addCurve(to: CGPoint(x: 54.28, y: 129.97), controlPoint1: CGPoint(x: 44.68, y: 125.67), controlPoint2: CGPoint(x: 48.98, y: 129.97))
                        shape2.addLine(to: CGPoint(x: 54.95, y: 129.97))
                        shape2.addCurve(to: CGPoint(x: 64.55, y: 120.38), controlPoint1: CGPoint(x: 60.25, y: 129.97), controlPoint2: CGPoint(x: 64.55, y: 125.67))
                        shape2.addLine(to: CGPoint(x: 64.55, y: 64.47))
                        shape2.addLine(to: CGPoint(x: 64.55, y: 63.5))
                        shape2.addLine(to: CGPoint(x: 64.55, y: 43.43))
                        shape2.addLine(to: CGPoint(x: 69.36, y: 58.3))
                        shape2.addCurve(to: CGPoint(x: 76.2, y: 63.27), controlPoint1: CGPoint(x: 70.26, y: 61.09), controlPoint2: CGPoint(x: 73.26, y: 63.27))
                        shape2.addLine(to: CGPoint(x: 80.52, y: 63.27))
                        shape2.addCurve(to: CGPoint(x: 84.44, y: 61.41), controlPoint1: CGPoint(x: 82.15, y: 63.27), controlPoint2: CGPoint(x: 83.58, y: 62.6))
                        shape2.addCurve(to: CGPoint(x: 85.01, y: 57.12), controlPoint1: CGPoint(x: 85.3, y: 60.23), controlPoint2: CGPoint(x: 85.51, y: 58.67))
                        shape2.close()
                        shape2.move(to: CGPoint(x: 85.01, y: 57.12))
                        context.saveGState()
                        context.translateBy(x: 0.23, y: 46.42)
                        shape2.usesEvenOddFillRule = true
                        UIColor(hue: 0.094, saturation: 0.736, brightness: 0.831, alpha: 1).setFill()
                        shape2.fill()
                        context.restoreGState()
                        
                        context.restoreGState()
                    }
                    
                    context.restoreGState()
                }
                
                context.restoreGState()
            }
            
            /// Group
            do {
                context.saveGState()
                context.translateBy(x: 102.86, y: 0)
                
                /// XMLID_231_
                let xMLID_231_ = UIBezierPath()
                xMLID_231_.move(to: CGPoint(x: 34.32, y: 7.04))
                xMLID_231_.addCurve(to: CGPoint(x: 3.95, y: 3.35), controlPoint1: CGPoint(x: 24.2, y: 2.87), controlPoint2: CGPoint(x: 14.07, y: 9.64))
                xMLID_231_.addLine(to: CGPoint(x: 3.95, y: 1.95))
                xMLID_231_.addCurve(to: CGPoint(x: 1.97, y: 0), controlPoint1: CGPoint(x: 3.95, y: 0.87), controlPoint2: CGPoint(x: 3.06, y: 0))
                xMLID_231_.addCurve(to: CGPoint(x: 0, y: 1.95), controlPoint1: CGPoint(x: 0.88, y: 0), controlPoint2: CGPoint(x: 0, y: 0.87))
                xMLID_231_.addLine(to: CGPoint(x: 0, y: 31.01))
                xMLID_231_.addLine(to: CGPoint(x: 3.95, y: 33.1))
                xMLID_231_.addLine(to: CGPoint(x: 3.95, y: 18.22))
                xMLID_231_.addCurve(to: CGPoint(x: 33.96, y: 9.02), controlPoint1: CGPoint(x: 13.95, y: 20.18), controlPoint2: CGPoint(x: 23.96, y: 9.41))
                xMLID_231_.addCurve(to: CGPoint(x: 34.95, y: 8.18), controlPoint1: CGPoint(x: 34.45, y: 9.01), controlPoint2: CGPoint(x: 34.86, y: 8.65))
                xMLID_231_.addCurve(to: CGPoint(x: 34.32, y: 7.04), controlPoint1: CGPoint(x: 35.04, y: 7.7), controlPoint2: CGPoint(x: 34.78, y: 7.23))
                xMLID_231_.close()
                xMLID_231_.move(to: CGPoint(x: 34.32, y: 7.04))
                context.saveGState()
                context.translateBy(x: 22.1, y: 0.37)
                xMLID_231_.usesEvenOddFillRule = true
                UIColor(hue: 0.094, saturation: 0.736, brightness: 0.831, alpha: 0.55).setFill()
                xMLID_231_.fill()
                context.restoreGState()
                
                /// XMLID_1083_
                let xMLID_1083_ = UIBezierPath()
                xMLID_1083_.move(to: CGPoint(x: 25.92, y: 41.57))
                xMLID_1083_.addLine(to: CGPoint(x: 25.92, y: 0.89))
                xMLID_1083_.addLine(to: CGPoint(x: 21.97, y: 0))
                xMLID_1083_.addLine(to: CGPoint(x: 21.97, y: 15.86))
                xMLID_1083_.addLine(to: CGPoint(x: 21.97, y: 41.68))
                xMLID_1083_.addCurve(to: CGPoint(x: 13.37, y: 46.87), controlPoint1: CGPoint(x: 19.02, y: 42.45), controlPoint2: CGPoint(x: 17.45, y: 44.95))
                xMLID_1083_.addCurve(to: CGPoint(x: 6.2, y: 49.23), controlPoint1: CGPoint(x: 13.41, y: 46.64), controlPoint2: CGPoint(x: 5.38, y: 48.46))
                xMLID_1083_.addCurve(to: CGPoint(x: 0.17, y: 53.6), controlPoint1: CGPoint(x: 2.76, y: 50.56), controlPoint2: CGPoint(x: 1.02, y: 52.33))
                xMLID_1083_.addCurve(to: CGPoint(x: 0.12, y: 54.66), controlPoint1: CGPoint(x: -0.04, y: 53.92), controlPoint2: CGPoint(x: -0.06, y: 54.32))
                xMLID_1083_.addCurve(to: CGPoint(x: 1.05, y: 55.2), controlPoint1: CGPoint(x: 0.31, y: 54.99), controlPoint2: CGPoint(x: 0.66, y: 55.2))
                xMLID_1083_.addLine(to: CGPoint(x: 46.88, y: 55.2))
                xMLID_1083_.addCurve(to: CGPoint(x: 47.85, y: 54.55), controlPoint1: CGPoint(x: 47.31, y: 55.2), controlPoint2: CGPoint(x: 47.69, y: 54.94))
                xMLID_1083_.addCurve(to: CGPoint(x: 47.59, y: 53.42), controlPoint1: CGPoint(x: 48.01, y: 54.16), controlPoint2: CGPoint(x: 47.91, y: 53.71))
                xMLID_1083_.addCurve(to: CGPoint(x: 25.92, y: 41.57), controlPoint1: CGPoint(x: 43.87, y: 49.96), controlPoint2: CGPoint(x: 34.98, y: 42.6))
                xMLID_1083_.close()
                xMLID_1083_.move(to: CGPoint(x: 25.92, y: 41.57))
                context.saveGState()
                context.translateBy(x: 0.13, y: 31.29)
                xMLID_1083_.usesEvenOddFillRule = true
                UIColor(hue: 0.094, saturation: 0.736, brightness: 0.831, alpha: 0.55).setFill()
                xMLID_1083_.fill()
                context.restoreGState()
                
                context.restoreGState()
            }
        }
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()
    }
    
    class func drawPadawan2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)
        context.translateBy(x: 0, y: 1)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 200, resizedFrame.height / 200)
        
        /// Group
        context.saveGState()
        context.setShadow(
            offset: CGSize(width: 0 * resizedShadowScale, height: 2 * resizedShadowScale),
            blur: 4 * resizedShadowScale,
            color: UIColor(white: 0, alpha: 0.5).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        do {
            context.translateBy(x: 12, y: 12)
            
            /// Padawan
            do {
                context.saveGState()
                
                /// Shape
                let shape = UIBezierPath()
                shape.move(to: CGPoint(x: 15.03, y: 37.48))
                shape.addCurve(to: CGPoint(x: 18.99, y: 37.9), controlPoint1: CGPoint(x: 16.34, y: 37.76), controlPoint2: CGPoint(x: 17.67, y: 37.9))
                shape.addCurve(to: CGPoint(x: 37.53, y: 22.89), controlPoint1: CGPoint(x: 27.88, y: 37.9), controlPoint2: CGPoint(x: 35.68, y: 31.59))
                shape.addCurve(to: CGPoint(x: 34.89, y: 8.63), controlPoint1: CGPoint(x: 38.59, y: 17.94), controlPoint2: CGPoint(x: 37.65, y: 12.88))
                shape.addCurve(to: CGPoint(x: 22.93, y: 0.42), controlPoint1: CGPoint(x: 32.13, y: 4.39), controlPoint2: CGPoint(x: 27.88, y: 1.47))
                shape.addCurve(to: CGPoint(x: 18.96, y: 0), controlPoint1: CGPoint(x: 21.62, y: 0.14), controlPoint2: CGPoint(x: 20.29, y: 0))
                shape.addCurve(to: CGPoint(x: 0.42, y: 15.01), controlPoint1: CGPoint(x: 10.07, y: 0), controlPoint2: CGPoint(x: 2.27, y: 6.31))
                shape.addCurve(to: CGPoint(x: 3.07, y: 29.26), controlPoint1: CGPoint(x: -0.63, y: 19.96), controlPoint2: CGPoint(x: 0.31, y: 25.02))
                shape.addCurve(to: CGPoint(x: 15.03, y: 37.48), controlPoint1: CGPoint(x: 5.83, y: 33.51), controlPoint2: CGPoint(x: 10.07, y: 36.43))
                shape.close()
                shape.move(to: CGPoint(x: 15.03, y: 37.48))
                context.saveGState()
                context.translateBy(x: 74.58, y: 0.66)
                shape.usesEvenOddFillRule = true
                UIColor(hue: 0.565, saturation: 0.503, brightness: 0.678, alpha: 1).setFill()
                shape.fill()
                context.restoreGState()
                
                /// Shape
                let shape2 = UIBezierPath()
                shape2.move(to: CGPoint(x: 167.3, y: 75.37))
                shape2.addLine(to: CGPoint(x: 133.09, y: 75.37))
                shape2.addLine(to: CGPoint(x: 133.09, y: 63.31))
                shape2.addLine(to: CGPoint(x: 133.09, y: 26.22))
                shape2.addLine(to: CGPoint(x: 134.94, y: 26.62))
                shape2.addCurve(to: CGPoint(x: 136.18, y: 26.75), controlPoint1: CGPoint(x: 135.35, y: 26.7), controlPoint2: CGPoint(x: 135.77, y: 26.75))
                shape2.addCurve(to: CGPoint(x: 142.03, y: 22.02), controlPoint1: CGPoint(x: 138.98, y: 26.75), controlPoint2: CGPoint(x: 141.44, y: 24.76))
                shape2.addLine(to: CGPoint(x: 142.43, y: 20.16))
                shape2.addCurve(to: CGPoint(x: 137.83, y: 13.08), controlPoint1: CGPoint(x: 143.11, y: 16.94), controlPoint2: CGPoint(x: 141.05, y: 13.77))
                shape2.addLine(to: CGPoint(x: 100.84, y: 5.22))
                shape2.addCurve(to: CGPoint(x: 100.81, y: 5.21), controlPoint1: CGPoint(x: 100.83, y: 5.22), controlPoint2: CGPoint(x: 100.82, y: 5.22))
                shape2.addLine(to: CGPoint(x: 76.81, y: 0.11))
                shape2.addCurve(to: CGPoint(x: 73.89, y: 0.28), controlPoint1: CGPoint(x: 75.81, y: -0.1), controlPoint2: CGPoint(x: 74.82, y: -0))
                shape2.addCurve(to: CGPoint(x: 71.96, y: 1.08), controlPoint1: CGPoint(x: 73.21, y: 0.44), controlPoint2: CGPoint(x: 72.55, y: 0.7))
                shape2.addLine(to: CGPoint(x: 32.14, y: 26.89))
                shape2.addCurve(to: CGPoint(x: 29.56, y: 30.65), controlPoint1: CGPoint(x: 30.81, y: 27.75), controlPoint2: CGPoint(x: 29.89, y: 29.09))
                shape2.addCurve(to: CGPoint(x: 30.39, y: 35.14), controlPoint1: CGPoint(x: 29.23, y: 32.21), controlPoint2: CGPoint(x: 29.52, y: 33.81))
                shape2.addLine(to: CGPoint(x: 31.46, y: 36.8))
                shape2.addCurve(to: CGPoint(x: 36.48, y: 39.52), controlPoint1: CGPoint(x: 32.57, y: 38.5), controlPoint2: CGPoint(x: 34.45, y: 39.52))
                shape2.addCurve(to: CGPoint(x: 39.73, y: 38.56), controlPoint1: CGPoint(x: 37.64, y: 39.52), controlPoint2: CGPoint(x: 38.76, y: 39.18))
                shape2.addLine(to: CGPoint(x: 66.15, y: 21.42))
                shape2.addLine(to: CGPoint(x: 62.69, y: 37.68))
                shape2.addCurve(to: CGPoint(x: 59.12, y: 39.97), controlPoint1: CGPoint(x: 61.29, y: 38.19), controlPoint2: CGPoint(x: 60, y: 38.98))
                shape2.addLine(to: CGPoint(x: 44.45, y: 56.51))
                shape2.addCurve(to: CGPoint(x: 44.1, y: 57), controlPoint1: CGPoint(x: 44.31, y: 56.66), controlPoint2: CGPoint(x: 44.21, y: 56.84))
                shape2.addLine(to: CGPoint(x: 9.13, y: 59.82))
                shape2.addCurve(to: CGPoint(x: 1.67, y: 63.43), controlPoint1: CGPoint(x: 6.08, y: 60.07), controlPoint2: CGPoint(x: 3.36, y: 61.38))
                shape2.addCurve(to: CGPoint(x: 0.04, y: 68.59), controlPoint1: CGPoint(x: 0.42, y: 64.95), controlPoint2: CGPoint(x: -0.16, y: 66.78))
                shape2.addCurve(to: CGPoint(x: 9.76, y: 75.68), controlPoint1: CGPoint(x: 0.49, y: 72.64), controlPoint2: CGPoint(x: 4.67, y: 75.68))
                shape2.addCurve(to: CGPoint(x: 10.78, y: 75.64), controlPoint1: CGPoint(x: 10.1, y: 75.68), controlPoint2: CGPoint(x: 10.44, y: 75.67))
                shape2.addLine(to: CGPoint(x: 60.89, y: 71.6))
                shape2.addLine(to: CGPoint(x: 69.24, y: 75.68))
                shape2.addCurve(to: CGPoint(x: 77.28, y: 77.47), controlPoint1: CGPoint(x: 71.33, y: 76.71), controlPoint2: CGPoint(x: 74.79, y: 77.47))
                shape2.addLine(to: CGPoint(x: 77.36, y: 77.47))
                shape2.addLine(to: CGPoint(x: 77.36, y: 127.2))
                shape2.addCurve(to: CGPoint(x: 85.22, y: 135.13), controlPoint1: CGPoint(x: 77.36, y: 131.57), controlPoint2: CGPoint(x: 80.89, y: 135.13))
                shape2.addLine(to: CGPoint(x: 85.25, y: 135.13))
                shape2.addCurve(to: CGPoint(x: 93.12, y: 127.16), controlPoint1: CGPoint(x: 89.59, y: 135.12), controlPoint2: CGPoint(x: 93.12, y: 131.54))
                shape2.addLine(to: CGPoint(x: 93.12, y: 76.82))
                shape2.addLine(to: CGPoint(x: 102.77, y: 76.42))
                shape2.addCurve(to: CGPoint(x: 106.78, y: 74.35), controlPoint1: CGPoint(x: 104.44, y: 76.35), controlPoint2: CGPoint(x: 105.9, y: 75.6))
                shape2.addCurve(to: CGPoint(x: 107.37, y: 69.88), controlPoint1: CGPoint(x: 107.66, y: 73.1), controlPoint2: CGPoint(x: 107.87, y: 71.47))
                shape2.addLine(to: CGPoint(x: 100.71, y: 48.81))
                shape2.addCurve(to: CGPoint(x: 98.38, y: 45.25), controlPoint1: CGPoint(x: 100.3, y: 47.53), controlPoint2: CGPoint(x: 99.45, y: 46.28))
                shape2.addLine(to: CGPoint(x: 103.76, y: 19.99))
                shape2.addLine(to: CGPoint(x: 125.12, y: 24.53))
                shape2.addLine(to: CGPoint(x: 125.12, y: 63.31))
                shape2.addLine(to: CGPoint(x: 125.12, y: 75.36))
                shape2.addLine(to: CGPoint(x: 125.12, y: 125.14))
                shape2.addCurve(to: CGPoint(x: 129.11, y: 129.12), controlPoint1: CGPoint(x: 125.12, y: 127.34), controlPoint2: CGPoint(x: 126.91, y: 129.12))
                shape2.addCurve(to: CGPoint(x: 133.09, y: 125.14), controlPoint1: CGPoint(x: 131.3, y: 129.12), controlPoint2: CGPoint(x: 133.09, y: 127.34))
                shape2.addLine(to: CGPoint(x: 133.09, y: 83.32))
                shape2.addLine(to: CGPoint(x: 167.3, y: 83.32))
                shape2.addLine(to: CGPoint(x: 167.3, y: 125.14))
                shape2.addCurve(to: CGPoint(x: 171.28, y: 129.12), controlPoint1: CGPoint(x: 167.3, y: 127.34), controlPoint2: CGPoint(x: 169.08, y: 129.12))
                shape2.addCurve(to: CGPoint(x: 175.26, y: 125.14), controlPoint1: CGPoint(x: 173.48, y: 129.12), controlPoint2: CGPoint(x: 175.26, y: 127.34))
                shape2.addLine(to: CGPoint(x: 175.26, y: 83.32))
                shape2.addCurve(to: CGPoint(x: 167.3, y: 75.37), controlPoint1: CGPoint(x: 175.26, y: 78.93), controlPoint2: CGPoint(x: 171.69, y: 75.37))
                shape2.close()
                shape2.move(to: CGPoint(x: 167.3, y: 75.37))
                context.saveGState()
                context.translateBy(x: 0, y: 39.25)
                shape2.usesEvenOddFillRule = true
                UIColor(hue: 0.565, saturation: 0.503, brightness: 0.678, alpha: 1).setFill()
                shape2.fill()
                context.restoreGState()
                
                context.restoreGState()
            }
        }
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()
    }
    
    class func drawMitspieler2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 200, resizedFrame.height / 200)
        
        /// Group 2
        context.saveGState()
        context.setShadow(
            offset: CGSize(width: 0 * resizedShadowScale, height: 2 * resizedShadowScale),
            blur: 4 * resizedShadowScale,
            color: UIColor(white: 0, alpha: 0.5).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        do {
            context.translateBy(x: 13, y: 28)
            
            /// sports
            do {
                context.saveGState()
                
                /// Capa_1
                do {
                    context.saveGState()
                    
                    /// Group
                    do {
                        context.saveGState()
                        
                        /// Group
                        do {
                            context.saveGState()
                            context.translateBy(x: 33.16, y: 83.11)
                            
                            /// Shape
                            let shape = UIBezierPath()
                            shape.move(to: CGPoint(x: 27.36, y: 53.2))
                            shape.addCurve(to: CGPoint(x: 23.67, y: 57.2), controlPoint1: CGPoint(x: 27.56, y: 55.4), controlPoint2: CGPoint(x: 25.9, y: 57.2))
                            shape.addLine(to: CGPoint(x: 20.86, y: 57.2))
                            shape.addCurve(to: CGPoint(x: 16.42, y: 53.2), controlPoint1: CGPoint(x: 18.63, y: 57.2), controlPoint2: CGPoint(x: 16.63, y: 55.4))
                            shape.addLine(to: CGPoint(x: 14.17, y: 29.71))
                            shape.addCurve(to: CGPoint(x: 11.57, y: 22.34), controlPoint1: CGPoint(x: 13.96, y: 27.51), controlPoint2: CGPoint(x: 12.79, y: 24.19))
                            shape.addLine(to: CGPoint(x: 0.57, y: 5.64))
                            shape.addCurve(to: CGPoint(x: 2.34, y: 1.54), controlPoint1: CGPoint(x: -0.65, y: 3.79), controlPoint2: CGPoint(x: 0.15, y: 1.94))
                            shape.addLine(to: CGPoint(x: 10.31, y: 0.07))
                            shape.addCurve(to: CGPoint(x: 15.86, y: 3.05), controlPoint1: CGPoint(x: 12.5, y: -0.33), controlPoint2: CGPoint(x: 15, y: 1.01))
                            shape.addLine(to: CGPoint(x: 23.13, y: 20.22))
                            shape.addCurve(to: CGPoint(x: 25.06, y: 27.93), controlPoint1: CGPoint(x: 23.99, y: 22.26), controlPoint2: CGPoint(x: 24.86, y: 25.73))
                            shape.addLine(to: CGPoint(x: 27.36, y: 53.2))
                            shape.close()
                            shape.move(to: CGPoint(x: 27.36, y: 53.2))
                            context.saveGState()
                            context.translateBy(x: 1.68, y: 1.96)
                            shape.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape.fill()
                            context.restoreGState()
                            
                            /// Shape
                            let shape2 = UIBezierPath()
                            shape2.move(to: CGPoint(x: 25.23, y: 60.3))
                            shape2.addLine(to: CGPoint(x: 22.41, y: 60.3))
                            shape2.addCurve(to: CGPoint(x: 16.43, y: 54.89), controlPoint1: CGPoint(x: 19.4, y: 60.3), controlPoint2: CGPoint(x: 16.71, y: 57.88))
                            shape2.addLine(to: CGPoint(x: 14.17, y: 31.41))
                            shape2.addCurve(to: CGPoint(x: 11.82, y: 24.74), controlPoint1: CGPoint(x: 13.99, y: 29.44), controlPoint2: CGPoint(x: 12.91, y: 26.39))
                            shape2.addLine(to: CGPoint(x: 0.82, y: 8.03))
                            shape2.addCurve(to: CGPoint(x: 0.3, y: 3.99), controlPoint1: CGPoint(x: -0.05, y: 6.71), controlPoint2: CGPoint(x: -0.24, y: 5.24))
                            shape2.addCurve(to: CGPoint(x: 3.61, y: 1.57), controlPoint1: CGPoint(x: 0.84, y: 2.74), controlPoint2: CGPoint(x: 2.05, y: 1.85))
                            shape2.addLine(to: CGPoint(x: 11.58, y: 0.1))
                            shape2.addCurve(to: CGPoint(x: 18.85, y: 4), controlPoint1: CGPoint(x: 14.52, y: -0.45), controlPoint2: CGPoint(x: 17.72, y: 1.32))
                            shape2.addLine(to: CGPoint(x: 26.12, y: 21.17))
                            shape2.addCurve(to: CGPoint(x: 28.17, y: 29.34), controlPoint1: CGPoint(x: 27.06, y: 23.37), controlPoint2: CGPoint(x: 27.96, y: 26.96))
                            shape2.addLine(to: CGPoint(x: 30.47, y: 54.61))
                            shape2.addCurve(to: CGPoint(x: 29.13, y: 58.62), controlPoint1: CGPoint(x: 30.6, y: 56.11), controlPoint2: CGPoint(x: 30.13, y: 57.54))
                            shape2.addCurve(to: CGPoint(x: 25.23, y: 60.3), controlPoint1: CGPoint(x: 28.14, y: 59.7), controlPoint2: CGPoint(x: 26.75, y: 60.3))
                            shape2.close()
                            shape2.move(to: CGPoint(x: 12.66, y: 3.09))
                            shape2.addCurve(to: CGPoint(x: 12.14, y: 3.14), controlPoint1: CGPoint(x: 12.49, y: 3.09), controlPoint2: CGPoint(x: 12.31, y: 3.11))
                            shape2.addLine(to: CGPoint(x: 4.18, y: 4.61))
                            shape2.addCurve(to: CGPoint(x: 3.16, y: 5.2), controlPoint1: CGPoint(x: 3.66, y: 4.7), controlPoint2: CGPoint(x: 3.29, y: 4.92))
                            shape2.addCurve(to: CGPoint(x: 3.43, y: 6.34), controlPoint1: CGPoint(x: 3.04, y: 5.48), controlPoint2: CGPoint(x: 3.14, y: 5.9))
                            shape2.addLine(to: CGPoint(x: 14.43, y: 23.04))
                            shape2.addCurve(to: CGPoint(x: 17.28, y: 31.11), controlPoint1: CGPoint(x: 15.79, y: 25.11), controlPoint2: CGPoint(x: 17.04, y: 28.65))
                            shape2.addLine(to: CGPoint(x: 19.53, y: 54.6))
                            shape2.addCurve(to: CGPoint(x: 22.41, y: 57.2), controlPoint1: CGPoint(x: 19.66, y: 56.01), controlPoint2: CGPoint(x: 20.98, y: 57.2))
                            shape2.addLine(to: CGPoint(x: 25.23, y: 57.2))
                            shape2.addCurve(to: CGPoint(x: 26.83, y: 56.53), controlPoint1: CGPoint(x: 25.86, y: 57.2), controlPoint2: CGPoint(x: 26.43, y: 56.96))
                            shape2.addCurve(to: CGPoint(x: 27.36, y: 54.89), controlPoint1: CGPoint(x: 27.23, y: 56.1), controlPoint2: CGPoint(x: 27.42, y: 55.51))
                            shape2.addLine(to: CGPoint(x: 25.07, y: 29.62))
                            shape2.addCurve(to: CGPoint(x: 23.25, y: 22.37), controlPoint1: CGPoint(x: 24.88, y: 27.58), controlPoint2: CGPoint(x: 24.05, y: 24.26))
                            shape2.addLine(to: CGPoint(x: 15.98, y: 5.19))
                            shape2.addCurve(to: CGPoint(x: 12.66, y: 3.09), controlPoint1: CGPoint(x: 15.47, y: 4), controlPoint2: CGPoint(x: 14.05, y: 3.09))
                            shape2.close()
                            shape2.move(to: CGPoint(x: 12.66, y: 3.09))
                            context.saveGState()
                            context.translateBy(x: 0.12, y: 0.41)
                            shape2.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape2.fill()
                            context.restoreGState()
                            
                            context.restoreGState()
                        }
                        
                        /// Group
                        do {
                            context.saveGState()
                            context.translateBy(x: 0, y: 82)
                            
                            /// Shape
                            let shape3 = UIBezierPath()
                            shape3.move(to: CGPoint(x: 6.88, y: 49.24))
                            shape3.addCurve(to: CGPoint(x: 1.96, y: 48.07), controlPoint1: CGPoint(x: 5.12, y: 50.6), controlPoint2: CGPoint(x: 2.91, y: 50.08))
                            shape3.addLine(to: CGPoint(x: 0.43, y: 44.85))
                            shape3.addCurve(to: CGPoint(x: 1.93, y: 38.78), controlPoint1: CGPoint(x: -0.52, y: 42.85), controlPoint2: CGPoint(x: 0.16, y: 40.12))
                            shape3.addLine(to: CGPoint(x: 15.9, y: 28.31))
                            shape3.addCurve(to: CGPoint(x: 20.37, y: 22.05), controlPoint1: CGPoint(x: 17.68, y: 26.97), controlPoint2: CGPoint(x: 19.69, y: 24.16))
                            shape3.addLine(to: CGPoint(x: 26.88, y: 1.93))
                            shape3.addCurve(to: CGPoint(x: 31, y: 0.92), controlPoint1: CGPoint(x: 27.56, y: -0.18), controlPoint2: CGPoint(x: 29.42, y: -0.63))
                            shape3.addLine(to: CGPoint(x: 33.89, y: 3.76))
                            shape3.addCurve(to: CGPoint(x: 35.41, y: 10.37), controlPoint1: CGPoint(x: 35.48, y: 5.31), controlPoint2: CGPoint(x: 36.16, y: 8.28))
                            shape3.addLine(to: CGPoint(x: 28.38, y: 29.81))
                            shape3.addCurve(to: CGPoint(x: 23.82, y: 36.08), controlPoint1: CGPoint(x: 27.63, y: 31.89), controlPoint2: CGPoint(x: 25.58, y: 34.71))
                            shape3.addLine(to: CGPoint(x: 6.88, y: 49.24))
                            shape3.close()
                            shape3.move(to: CGPoint(x: 6.88, y: 49.24))
                            context.saveGState()
                            context.translateBy(x: 1.85, y: 2.31)
                            shape3.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape3.fill()
                            context.restoreGState()
                            
                            /// Shape
                            let shape4 = UIBezierPath()
                            shape4.move(to: CGPoint(x: 6.35, y: 53.09))
                            shape4.addCurve(to: CGPoint(x: 2.12, y: 50.28), controlPoint1: CGPoint(x: 4.53, y: 53.09), controlPoint2: CGPoint(x: 2.95, y: 52.04))
                            shape4.addLine(to: CGPoint(x: 0.58, y: 47.05))
                            shape4.addCurve(to: CGPoint(x: 2.56, y: 39.09), controlPoint1: CGPoint(x: -0.69, y: 44.38), controlPoint2: CGPoint(x: 0.18, y: 40.88))
                            shape4.addLine(to: CGPoint(x: 16.53, y: 28.62))
                            shape4.addCurve(to: CGPoint(x: 20.45, y: 23.12), controlPoint1: CGPoint(x: 18.04, y: 27.48), controlPoint2: CGPoint(x: 19.87, y: 24.92))
                            shape4.addLine(to: CGPoint(x: 26.96, y: 3))
                            shape4.addCurve(to: CGPoint(x: 30.62, y: 0), controlPoint1: CGPoint(x: 27.56, y: 1.15), controlPoint2: CGPoint(x: 28.96, y: 0))
                            shape4.addCurve(to: CGPoint(x: 33.66, y: 1.37), controlPoint1: CGPoint(x: 31.7, y: 0), controlPoint2: CGPoint(x: 32.75, y: 0.47))
                            shape4.addLine(to: CGPoint(x: 36.55, y: 4.2))
                            shape4.addCurve(to: CGPoint(x: 38.44, y: 12.44), controlPoint1: CGPoint(x: 38.57, y: 6.17), controlPoint2: CGPoint(x: 39.4, y: 9.79))
                            shape4.addLine(to: CGPoint(x: 31.42, y: 31.88))
                            shape4.addCurve(to: CGPoint(x: 26.35, y: 38.84), controlPoint1: CGPoint(x: 30.56, y: 34.24), controlPoint2: CGPoint(x: 28.34, y: 37.3))
                            shape4.addLine(to: CGPoint(x: 9.41, y: 52))
                            shape4.addCurve(to: CGPoint(x: 6.35, y: 53.09), controlPoint1: CGPoint(x: 8.48, y: 52.71), controlPoint2: CGPoint(x: 7.43, y: 53.09))
                            shape4.close()
                            shape4.move(to: CGPoint(x: 30.62, y: 3.09))
                            shape4.addCurve(to: CGPoint(x: 29.93, y: 3.95), controlPoint1: CGPoint(x: 30.31, y: 3.09), controlPoint2: CGPoint(x: 30.06, y: 3.53))
                            shape4.addLine(to: CGPoint(x: 23.42, y: 24.07))
                            shape4.addCurve(to: CGPoint(x: 18.41, y: 31.09), controlPoint1: CGPoint(x: 22.64, y: 26.48), controlPoint2: CGPoint(x: 20.44, y: 29.56))
                            shape4.addLine(to: CGPoint(x: 4.44, y: 41.56))
                            shape4.addCurve(to: CGPoint(x: 3.4, y: 45.73), controlPoint1: CGPoint(x: 3.26, y: 42.45), controlPoint2: CGPoint(x: 2.77, y: 44.4))
                            shape4.addLine(to: CGPoint(x: 4.94, y: 48.96))
                            shape4.addCurve(to: CGPoint(x: 7.48, y: 49.56), controlPoint1: CGPoint(x: 5.44, y: 50.03), controlPoint2: CGPoint(x: 6.55, y: 50.29))
                            shape4.addLine(to: CGPoint(x: 24.43, y: 36.4))
                            shape4.addCurve(to: CGPoint(x: 28.48, y: 30.83), controlPoint1: CGPoint(x: 25.94, y: 35.23), controlPoint2: CGPoint(x: 27.83, y: 32.62))
                            shape4.addLine(to: CGPoint(x: 35.51, y: 11.39))
                            shape4.addCurve(to: CGPoint(x: 34.36, y: 6.4), controlPoint1: CGPoint(x: 36.06, y: 9.87), controlPoint2: CGPoint(x: 35.52, y: 7.53))
                            shape4.addLine(to: CGPoint(x: 31.47, y: 3.57))
                            shape4.addCurve(to: CGPoint(x: 30.62, y: 3.09), controlPoint1: CGPoint(x: 31.17, y: 3.27), controlPoint2: CGPoint(x: 30.85, y: 3.09))
                            shape4.close()
                            shape4.move(to: CGPoint(x: 30.62, y: 3.09))
                            context.saveGState()
                            context.translateBy(x: 0.28, y: 0.76)
                            shape4.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape4.fill()
                            context.restoreGState()
                            
                            context.restoreGState()
                        }
                        
                        /// Group
                        do {
                            context.saveGState()
                            context.translateBy(x: 4.67, y: 37.13)
                            
                            /// Shape
                            let shape5 = UIBezierPath()
                            shape5.move(to: CGPoint(x: 13.22, y: 50.96))
                            shape5.addCurve(to: CGPoint(x: 18.08, y: 53.26), controlPoint1: CGPoint(x: 14.19, y: 52.37), controlPoint2: CGPoint(x: 16.37, y: 53.41))
                            shape5.addLine(to: CGPoint(x: 21.57, y: 52.97))
                            shape5.addCurve(to: CGPoint(x: 22.83, y: 50.22), controlPoint1: CGPoint(x: 23.28, y: 52.83), controlPoint2: CGPoint(x: 23.85, y: 51.59))
                            shape5.addLine(to: CGPoint(x: 10.31, y: 33.34))
                            shape5.addCurve(to: CGPoint(x: 10.08, y: 28.2), controlPoint1: CGPoint(x: 9.29, y: 31.97), controlPoint2: CGPoint(x: 9.19, y: 29.66))
                            shape5.addLine(to: CGPoint(x: 25.94, y: 2.36))
                            shape5.addCurve(to: CGPoint(x: 24.46, y: 0.02), controlPoint1: CGPoint(x: 26.83, y: 0.91), controlPoint2: CGPoint(x: 26.17, y: -0.15))
                            shape5.addLine(to: CGPoint(x: 17.54, y: 0.68))
                            shape5.addCurve(to: CGPoint(x: 13, y: 3.72), controlPoint1: CGPoint(x: 15.83, y: 0.84), controlPoint2: CGPoint(x: 13.79, y: 2.21))
                            shape5.addLine(to: CGPoint(x: 0.51, y: 27.56))
                            shape5.addCurve(to: CGPoint(x: 0.83, y: 32.87), controlPoint1: CGPoint(x: -0.28, y: 29.07), controlPoint2: CGPoint(x: -0.14, y: 31.46))
                            shape5.addLine(to: CGPoint(x: 13.22, y: 50.96))
                            shape5.close()
                            shape5.move(to: CGPoint(x: 13.22, y: 50.96))
                            context.saveGState()
                            context.translateBy(x: 1.79, y: 1.71)
                            shape5.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape5.fill()
                            context.restoreGState()
                            
                            /// Shape
                            let shape6 = UIBezierPath()
                            shape6.move(to: CGPoint(x: 19.31, y: 56.37))
                            shape6.addLine(to: CGPoint(x: 19.31, y: 56.37))
                            shape6.addCurve(to: CGPoint(x: 13.49, y: 53.38), controlPoint1: CGPoint(x: 17.12, y: 56.37), controlPoint2: CGPoint(x: 14.67, y: 55.12))
                            shape6.addLine(to: CGPoint(x: 1.09, y: 35.29))
                            shape6.addCurve(to: CGPoint(x: 0.68, y: 28.4), controlPoint1: CGPoint(x: -0.19, y: 33.42), controlPoint2: CGPoint(x: -0.37, y: 30.4))
                            shape6.addLine(to: CGPoint(x: 13.16, y: 4.55))
                            shape6.addCurve(to: CGPoint(x: 18.94, y: 0.68), controlPoint1: CGPoint(x: 14.21, y: 2.56), controlPoint2: CGPoint(x: 16.69, y: 0.9))
                            shape6.addLine(to: CGPoint(x: 25.87, y: 0.02))
                            shape6.addCurve(to: CGPoint(x: 29.11, y: 1.41), controlPoint1: CGPoint(x: 27.39, y: -0.12), controlPoint2: CGPoint(x: 28.54, y: 0.41))
                            shape6.addCurve(to: CGPoint(x: 28.83, y: 4.72), controlPoint1: CGPoint(x: 29.42, y: 1.96), controlPoint2: CGPoint(x: 29.8, y: 3.13))
                            shape6.addLine(to: CGPoint(x: 12.97, y: 30.56))
                            shape6.addCurve(to: CGPoint(x: 13.12, y: 33.97), controlPoint1: CGPoint(x: 12.4, y: 31.48), controlPoint2: CGPoint(x: 12.47, y: 33.1))
                            shape6.addLine(to: CGPoint(x: 25.64, y: 50.85))
                            shape6.addCurve(to: CGPoint(x: 26.2, y: 54.24), controlPoint1: CGPoint(x: 26.47, y: 51.97), controlPoint2: CGPoint(x: 26.67, y: 53.2))
                            shape6.addCurve(to: CGPoint(x: 23.26, y: 56.06), controlPoint1: CGPoint(x: 25.72, y: 55.28), controlPoint2: CGPoint(x: 24.65, y: 55.94))
                            shape6.addLine(to: CGPoint(x: 19.76, y: 56.35))
                            shape6.addCurve(to: CGPoint(x: 19.31, y: 56.37), controlPoint1: CGPoint(x: 19.62, y: 56.37), controlPoint2: CGPoint(x: 19.46, y: 56.37))
                            shape6.close()
                            shape6.move(to: CGPoint(x: 26.17, y: 3.1))
                            shape6.addLine(to: CGPoint(x: 26.16, y: 3.1))
                            shape6.addLine(to: CGPoint(x: 19.23, y: 3.76))
                            shape6.addCurve(to: CGPoint(x: 15.93, y: 5.98), controlPoint1: CGPoint(x: 18.05, y: 3.88), controlPoint2: CGPoint(x: 16.48, y: 4.93))
                            shape6.addLine(to: CGPoint(x: 3.44, y: 29.83))
                            shape6.addCurve(to: CGPoint(x: 3.67, y: 33.55), controlPoint1: CGPoint(x: 2.92, y: 30.83), controlPoint2: CGPoint(x: 3.02, y: 32.61))
                            shape6.addLine(to: CGPoint(x: 16.06, y: 51.64))
                            shape6.addCurve(to: CGPoint(x: 19.5, y: 53.27), controlPoint1: CGPoint(x: 16.71, y: 52.58), controlPoint2: CGPoint(x: 18.32, y: 53.38))
                            shape6.addLine(to: CGPoint(x: 23, y: 52.98))
                            shape6.addCurve(to: CGPoint(x: 23.28, y: 52.93), controlPoint1: CGPoint(x: 23.12, y: 52.97), controlPoint2: CGPoint(x: 23.21, y: 52.95))
                            shape6.addCurve(to: CGPoint(x: 23.13, y: 52.68), controlPoint1: CGPoint(x: 23.25, y: 52.86), controlPoint2: CGPoint(x: 23.2, y: 52.78))
                            shape6.addLine(to: CGPoint(x: 10.61, y: 35.8))
                            shape6.addCurve(to: CGPoint(x: 10.31, y: 28.95), controlPoint1: CGPoint(x: 9.23, y: 33.94), controlPoint2: CGPoint(x: 9.09, y: 30.93))
                            shape6.addLine(to: CGPoint(x: 26.17, y: 3.11))
                            shape6.addLine(to: CGPoint(x: 26.17, y: 3.1))
                            shape6.close()
                            shape6.move(to: CGPoint(x: 26.17, y: 3.1))
                            context.saveGState()
                            context.translateBy(x: 0.23, y: 0.15)
                            shape6.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape6.fill()
                            context.restoreGState()
                            
                            context.restoreGState()
                        }
                        
                        /// Group
                        do {
                            context.saveGState()
                            context.translateBy(x: 39.39, y: 36.53)
                            
                            /// Shape
                            let shape7 = UIBezierPath()
                            shape7.move(to: CGPoint(x: 34.82, y: 16.51))
                            shape7.addCurve(to: CGPoint(x: 35.34, y: 12.16), controlPoint1: CGPoint(x: 36.16, y: 15.45), controlPoint2: CGPoint(x: 36.39, y: 13.49))
                            shape7.addLine(to: CGPoint(x: 34.71, y: 11.37))
                            shape7.addCurve(to: CGPoint(x: 30.43, y: 10.97), controlPoint1: CGPoint(x: 33.65, y: 10.03), controlPoint2: CGPoint(x: 31.73, y: 9.85))
                            shape7.addLine(to: CGPoint(x: 22.86, y: 17.52))
                            shape7.addCurve(to: CGPoint(x: 18.57, y: 17.13), controlPoint1: CGPoint(x: 21.57, y: 18.64), controlPoint2: CGPoint(x: 19.64, y: 18.46))
                            shape7.addLine(to: CGPoint(x: 5.53, y: 0.92))
                            shape7.addCurve(to: CGPoint(x: 2.06, y: 1.2), controlPoint1: CGPoint(x: 4.46, y: -0.41), controlPoint2: CGPoint(x: 2.9, y: -0.28))
                            shape7.addLine(to: CGPoint(x: 0.51, y: 3.94))
                            shape7.addCurve(to: CGPoint(x: 1.02, y: 8.98), controlPoint1: CGPoint(x: -0.33, y: 5.42), controlPoint2: CGPoint(x: -0.1, y: 7.69))
                            shape7.addLine(to: CGPoint(x: 16.59, y: 26.86))
                            shape7.addCurve(to: CGPoint(x: 21.07, y: 27.28), controlPoint1: CGPoint(x: 17.71, y: 28.14), controlPoint2: CGPoint(x: 19.73, y: 28.33))
                            shape7.addLine(to: CGPoint(x: 34.82, y: 16.51))
                            shape7.close()
                            shape7.move(to: CGPoint(x: 34.82, y: 16.51))
                            context.saveGState()
                            context.translateBy(x: 2.17, y: 1.69)
                            shape7.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape7.fill()
                            context.restoreGState()
                            
                            /// Shape
                            let shape8 = UIBezierPath()
                            shape8.move(to: CGPoint(x: 20.62, y: 31.06))
                            shape8.addLine(to: CGPoint(x: 20.62, y: 31.06))
                            shape8.addCurve(to: CGPoint(x: 16.97, y: 29.42), controlPoint1: CGPoint(x: 19.21, y: 31.06), controlPoint2: CGPoint(x: 17.87, y: 30.46))
                            shape8.addLine(to: CGPoint(x: 1.39, y: 11.54))
                            shape8.addCurve(to: CGPoint(x: 0.7, y: 4.73), controlPoint1: CGPoint(x: -0.15, y: 9.76), controlPoint2: CGPoint(x: -0.46, y: 6.77))
                            shape8.addLine(to: CGPoint(x: 2.25, y: 1.99))
                            shape8.addCurve(to: CGPoint(x: 5.4, y: 0), controlPoint1: CGPoint(x: 2.97, y: 0.73), controlPoint2: CGPoint(x: 4.11, y: 0))
                            shape8.addCurve(to: CGPoint(x: 8.3, y: 1.5), controlPoint1: CGPoint(x: 6.49, y: 0), controlPoint2: CGPoint(x: 7.52, y: 0.53))
                            shape8.addLine(to: CGPoint(x: 21.34, y: 17.71))
                            shape8.addCurve(to: CGPoint(x: 22.45, y: 18.26), controlPoint1: CGPoint(x: 21.62, y: 18.06), controlPoint2: CGPoint(x: 22.02, y: 18.26))
                            shape8.addCurve(to: CGPoint(x: 23.39, y: 17.9), controlPoint1: CGPoint(x: 22.69, y: 18.26), controlPoint2: CGPoint(x: 23.05, y: 18.19))
                            shape8.addLine(to: CGPoint(x: 30.96, y: 11.35))
                            shape8.addCurve(to: CGPoint(x: 33.94, y: 10.23), controlPoint1: CGPoint(x: 31.8, y: 10.63), controlPoint2: CGPoint(x: 32.85, y: 10.23))
                            shape8.addCurve(to: CGPoint(x: 37.49, y: 11.96), controlPoint1: CGPoint(x: 35.33, y: 10.23), controlPoint2: CGPoint(x: 36.62, y: 10.86))
                            shape8.addLine(to: CGPoint(x: 38.12, y: 12.75))
                            shape8.addCurve(to: CGPoint(x: 37.34, y: 19.27), controlPoint1: CGPoint(x: 39.71, y: 14.76), controlPoint2: CGPoint(x: 39.36, y: 17.68))
                            shape8.addLine(to: CGPoint(x: 23.6, y: 30.04))
                            shape8.addCurve(to: CGPoint(x: 20.62, y: 31.06), controlPoint1: CGPoint(x: 22.76, y: 30.7), controlPoint2: CGPoint(x: 21.7, y: 31.06))
                            shape8.close()
                            shape8.move(to: CGPoint(x: 5.4, y: 3.1))
                            shape8.addCurve(to: CGPoint(x: 4.97, y: 3.51), controlPoint1: CGPoint(x: 5.3, y: 3.1), controlPoint2: CGPoint(x: 5.13, y: 3.23))
                            shape8.addLine(to: CGPoint(x: 3.42, y: 6.25))
                            shape8.addCurve(to: CGPoint(x: 3.75, y: 9.51), controlPoint1: CGPoint(x: 2.9, y: 7.16), controlPoint2: CGPoint(x: 3.06, y: 8.72))
                            shape8.addLine(to: CGPoint(x: 19.32, y: 27.39))
                            shape8.addCurve(to: CGPoint(x: 20.62, y: 27.96), controlPoint1: CGPoint(x: 19.64, y: 27.76), controlPoint2: CGPoint(x: 20.11, y: 27.96))
                            shape8.addLine(to: CGPoint(x: 20.62, y: 27.96))
                            shape8.addCurve(to: CGPoint(x: 21.66, y: 27.62), controlPoint1: CGPoint(x: 21.01, y: 27.96), controlPoint2: CGPoint(x: 21.38, y: 27.84))
                            shape8.addLine(to: CGPoint(x: 35.4, y: 16.84))
                            shape8.addCurve(to: CGPoint(x: 35.66, y: 14.66), controlPoint1: CGPoint(x: 36.08, y: 16.31), controlPoint2: CGPoint(x: 36.2, y: 15.34))
                            shape8.addLine(to: CGPoint(x: 35.04, y: 13.87))
                            shape8.addCurve(to: CGPoint(x: 33.94, y: 13.33), controlPoint1: CGPoint(x: 34.77, y: 13.53), controlPoint2: CGPoint(x: 34.36, y: 13.33))
                            shape8.addCurve(to: CGPoint(x: 33.01, y: 13.68), controlPoint1: CGPoint(x: 33.7, y: 13.33), controlPoint2: CGPoint(x: 33.35, y: 13.39))
                            shape8.addLine(to: CGPoint(x: 25.44, y: 20.24))
                            shape8.addCurve(to: CGPoint(x: 22.45, y: 21.35), controlPoint1: CGPoint(x: 24.61, y: 20.96), controlPoint2: CGPoint(x: 23.54, y: 21.35))
                            shape8.addCurve(to: CGPoint(x: 18.9, y: 19.65), controlPoint1: CGPoint(x: 21.07, y: 21.35), controlPoint2: CGPoint(x: 19.78, y: 20.73))
                            shape8.addLine(to: CGPoint(x: 5.86, y: 3.44))
                            shape8.addCurve(to: CGPoint(x: 5.4, y: 3.1), controlPoint1: CGPoint(x: 5.65, y: 3.17), controlPoint2: CGPoint(x: 5.47, y: 3.1))
                            shape8.close()
                            shape8.move(to: CGPoint(x: 5.4, y: 3.1))
                            context.saveGState()
                            context.translateBy(x: 0.62, y: 0.14)
                            shape8.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape8.fill()
                            context.restoreGState()
                            
                            context.restoreGState()
                        }
                        
                        /// Group
                        do {
                            context.saveGState()
                            context.translateBy(x: 23.81, y: 35.58)
                            
                            /// Shape
                            let shape9 = UIBezierPath()
                            shape9.move(to: CGPoint(x: 25.56, y: 53.11))
                            shape9.addCurve(to: CGPoint(x: 22.72, y: 56.66), controlPoint1: CGPoint(x: 25.69, y: 54.81), controlPoint2: CGPoint(x: 24.42, y: 56.4))
                            shape9.addLine(to: CGPoint(x: 3.91, y: 59.51))
                            shape9.addCurve(to: CGPoint(x: 0.78, y: 56.88), controlPoint1: CGPoint(x: 2.21, y: 59.76), controlPoint2: CGPoint(x: 0.8, y: 58.58))
                            shape9.addLine(to: CGPoint(x: 0, y: 4.88))
                            shape9.addCurve(to: CGPoint(x: 3.06, y: 1.49), controlPoint1: CGPoint(x: -0.02, y: 3.18), controlPoint2: CGPoint(x: 1.35, y: 1.65))
                            shape9.addLine(to: CGPoint(x: 18.16, y: 0.01))
                            shape9.addCurve(to: CGPoint(x: 21.51, y: 2.8), controlPoint1: CGPoint(x: 19.87, y: -0.15), controlPoint2: CGPoint(x: 21.37, y: 1.1))
                            shape9.addLine(to: CGPoint(x: 25.56, y: 53.11))
                            shape9.close()
                            shape9.move(to: CGPoint(x: 25.56, y: 53.11))
                            context.saveGState()
                            context.translateBy(x: 2.03, y: 1.99)
                            shape9.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape9.fill()
                            context.restoreGState()
                            
                            /// Shape
                            let shape10 = UIBezierPath()
                            shape10.move(to: CGPoint(x: 5.01, y: 62.64))
                            shape10.addCurve(to: CGPoint(x: 0.78, y: 58.45), controlPoint1: CGPoint(x: 2.63, y: 62.64), controlPoint2: CGPoint(x: 0.82, y: 60.84))
                            shape10.addLine(to: CGPoint(x: 0, y: 6.46))
                            shape10.addCurve(to: CGPoint(x: 4.46, y: 1.5), controlPoint1: CGPoint(x: -0.04, y: 3.96), controlPoint2: CGPoint(x: 1.96, y: 1.74))
                            shape10.addLine(to: CGPoint(x: 19.57, y: 0.02))
                            shape10.addCurve(to: CGPoint(x: 24.62, y: 4.22), controlPoint1: CGPoint(x: 22.15, y: -0.23), controlPoint2: CGPoint(x: 24.42, y: 1.7))
                            shape10.addLine(to: CGPoint(x: 28.67, y: 54.53))
                            shape10.addCurve(to: CGPoint(x: 24.52, y: 59.73), controlPoint1: CGPoint(x: 28.87, y: 57.02), controlPoint2: CGPoint(x: 27.01, y: 59.36))
                            shape10.addLine(to: CGPoint(x: 5.7, y: 62.58))
                            shape10.addCurve(to: CGPoint(x: 5.01, y: 62.64), controlPoint1: CGPoint(x: 5.47, y: 62.62), controlPoint2: CGPoint(x: 5.23, y: 62.64))
                            shape10.close()
                            shape10.move(to: CGPoint(x: 20.02, y: 3.09))
                            shape10.addLine(to: CGPoint(x: 4.77, y: 4.57))
                            shape10.addCurve(to: CGPoint(x: 3.12, y: 6.41), controlPoint1: CGPoint(x: 3.87, y: 4.66), controlPoint2: CGPoint(x: 3.1, y: 5.52))
                            shape10.addLine(to: CGPoint(x: 3.9, y: 58.4))
                            shape10.addCurve(to: CGPoint(x: 5.23, y: 59.52), controlPoint1: CGPoint(x: 3.91, y: 59.16), controlPoint2: CGPoint(x: 4.48, y: 59.64))
                            shape10.addLine(to: CGPoint(x: 24.05, y: 56.67))
                            shape10.addCurve(to: CGPoint(x: 25.56, y: 54.78), controlPoint1: CGPoint(x: 24.94, y: 56.54), controlPoint2: CGPoint(x: 25.63, y: 55.67))
                            shape10.addLine(to: CGPoint(x: 21.51, y: 4.47))
                            shape10.addCurve(to: CGPoint(x: 20.02, y: 3.09), controlPoint1: CGPoint(x: 21.45, y: 3.7), controlPoint2: CGPoint(x: 20.8, y: 3.09))
                            shape10.close()
                            shape10.move(to: CGPoint(x: 20.02, y: 3.09))
                            context.saveGState()
                            context.translateBy(x: 0.47, y: 0.44)
                            shape10.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape10.fill()
                            context.restoreGState()
                            
                            context.restoreGState()
                        }
                        
                        /// Group
                        do {
                            context.saveGState()
                            context.translateBy(x: 12.9, y: 0)
                            
                            /// Oval
                            let oval = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 28.57, height: 28.37))
                            context.saveGState()
                            context.translateBy(x: 2.36, y: 1.55)
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            oval.fill()
                            context.restoreGState()
                            
                            /// Shape
                            let shape11 = UIBezierPath()
                            shape11.move(to: CGPoint(x: 15.85, y: 31.47))
                            shape11.addCurve(to: CGPoint(x: 0.99, y: 21.22), controlPoint1: CGPoint(x: 9.26, y: 31.47), controlPoint2: CGPoint(x: 3.29, y: 27.35))
                            shape11.addCurve(to: CGPoint(x: 10.33, y: 0.99), controlPoint1: CGPoint(x: -2.05, y: 13.08), controlPoint2: CGPoint(x: 2.14, y: 4.01))
                            shape11.addCurve(to: CGPoint(x: 15.84, y: 0), controlPoint1: CGPoint(x: 12.11, y: 0.33), controlPoint2: CGPoint(x: 13.96, y: 0))
                            shape11.addCurve(to: CGPoint(x: 30.7, y: 10.26), controlPoint1: CGPoint(x: 22.43, y: 0), controlPoint2: CGPoint(x: 28.41, y: 4.12))
                            shape11.addCurve(to: CGPoint(x: 30.25, y: 22.29), controlPoint1: CGPoint(x: 32.18, y: 14.2), controlPoint2: CGPoint(x: 32.02, y: 18.47))
                            shape11.addCurve(to: CGPoint(x: 21.36, y: 30.48), controlPoint1: CGPoint(x: 28.49, y: 26.11), controlPoint2: CGPoint(x: 25.33, y: 29.02))
                            shape11.addCurve(to: CGPoint(x: 15.85, y: 31.47), controlPoint1: CGPoint(x: 19.59, y: 31.14), controlPoint2: CGPoint(x: 17.73, y: 31.47))
                            shape11.close()
                            shape11.move(to: CGPoint(x: 15.84, y: 3.09))
                            shape11.addCurve(to: CGPoint(x: 11.42, y: 3.89), controlPoint1: CGPoint(x: 14.33, y: 3.09), controlPoint2: CGPoint(x: 12.84, y: 3.36))
                            shape11.addCurve(to: CGPoint(x: 3.91, y: 20.14), controlPoint1: CGPoint(x: 4.84, y: 6.32), controlPoint2: CGPoint(x: 1.47, y: 13.61))
                            shape11.addCurve(to: CGPoint(x: 15.85, y: 28.38), controlPoint1: CGPoint(x: 5.76, y: 25.07), controlPoint2: CGPoint(x: 10.56, y: 28.38))
                            shape11.addCurve(to: CGPoint(x: 20.28, y: 27.58), controlPoint1: CGPoint(x: 17.36, y: 28.38), controlPoint2: CGPoint(x: 18.85, y: 28.11))
                            shape11.addCurve(to: CGPoint(x: 27.42, y: 21), controlPoint1: CGPoint(x: 23.47, y: 26.41), controlPoint2: CGPoint(x: 26, y: 24.07))
                            shape11.addCurve(to: CGPoint(x: 27.78, y: 11.33), controlPoint1: CGPoint(x: 28.84, y: 17.93), controlPoint2: CGPoint(x: 28.97, y: 14.5))
                            shape11.addCurve(to: CGPoint(x: 15.84, y: 3.09), controlPoint1: CGPoint(x: 25.93, y: 6.41), controlPoint2: CGPoint(x: 21.14, y: 3.09))
                            shape11.close()
                            shape11.move(to: CGPoint(x: 15.84, y: 3.09))
                            context.saveGState()
                            context.translateBy(x: 0.8, y: 0)
                            shape11.usesEvenOddFillRule = true
                            UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 1).setFill()
                            shape11.fill()
                            context.restoreGState()
                            
                            context.restoreGState()
                        }
                        
                        context.restoreGState()
                    }
                    
                    context.restoreGState()
                }
                
                context.restoreGState()
            }
            
            /// sport
            do {
                context.saveGState()
                context.translateBy(x: 134.5, y: 51.5)
                context.scaleBy(x: -1, y: 1)
                context.rotate(by: 2 * CGFloat.pi)
                context.translateBy(x: -39.5, y: -51.5)
                
                /// Capa_1
                do {
                    context.saveGState()
                    
                    /// Group
                    do {
                        context.saveGState()
                        
                        /// Shape
                        let shape12 = UIBezierPath()
                        shape12.move(to: CGPoint(x: 64.46, y: 50.67))
                        shape12.addLine(to: CGPoint(x: 65.26, y: 49.22))
                        shape12.addCurve(to: CGPoint(x: 63.97, y: 44.71), controlPoint1: CGPoint(x: 66.13, y: 47.63), controlPoint2: CGPoint(x: 65.55, y: 45.61))
                        shape12.addLine(to: CGPoint(x: 51.43, y: 37.55))
                        shape12.addCurve(to: CGPoint(x: 49.39, y: 34.99), controlPoint1: CGPoint(x: 50.62, y: 37.09), controlPoint2: CGPoint(x: 49.65, y: 35.87))
                        shape12.addLine(to: CGPoint(x: 45.5, y: 21.91))
                        shape12.addCurve(to: CGPoint(x: 45.08, y: 21.03), controlPoint1: CGPoint(x: 45.41, y: 21.58), controlPoint2: CGPoint(x: 45.26, y: 21.29))
                        shape12.addCurve(to: CGPoint(x: 42.17, y: 19.31), controlPoint1: CGPoint(x: 44.52, y: 20), controlPoint2: CGPoint(x: 43.43, y: 19.31))
                        shape12.addLine(to: CGPoint(x: 27.29, y: 19.94))
                        shape12.addLine(to: CGPoint(x: 7.81, y: 0.94))
                        shape12.addCurve(to: CGPoint(x: 3.05, y: 0.81), controlPoint1: CGPoint(x: 6.58, y: -0.26), controlPoint2: CGPoint(x: 4.35, y: -0.32))
                        shape12.addLine(to: CGPoint(x: 1.09, y: 2.51))
                        shape12.addCurve(to: CGPoint(x: 0, y: 4.78), controlPoint1: CGPoint(x: 0.42, y: 3.1), controlPoint2: CGPoint(x: 0.03, y: 3.91))
                        shape12.addCurve(to: CGPoint(x: 0.95, y: 7.12), controlPoint1: CGPoint(x: -0.03, y: 5.66), controlPoint2: CGPoint(x: 0.31, y: 6.49))
                        shape12.addLine(to: CGPoint(x: 22.61, y: 28.41))
                        shape12.addLine(to: CGPoint(x: 23.87, y: 57.05))
                        shape12.addCurve(to: CGPoint(x: 23.92, y: 57.39), controlPoint1: CGPoint(x: 23.87, y: 57.16), controlPoint2: CGPoint(x: 23.9, y: 57.27))
                        shape12.addLine(to: CGPoint(x: 19.46, y: 67.17))
                        shape12.addCurve(to: CGPoint(x: 16.29, y: 71), controlPoint1: CGPoint(x: 18.88, y: 68.44), controlPoint2: CGPoint(x: 17.43, y: 70.19))
                        shape12.addLine(to: CGPoint(x: 5.55, y: 78.65))
                        shape12.addCurve(to: CGPoint(x: 4.06, y: 84.26), controlPoint1: CGPoint(x: 3.82, y: 79.89), controlPoint2: CGPoint(x: 3.16, y: 82.35))
                        shape12.addLine(to: CGPoint(x: 5.53, y: 87.41))
                        shape12.addCurve(to: CGPoint(x: 8.6, y: 89.44), controlPoint1: CGPoint(x: 6.11, y: 88.66), controlPoint2: CGPoint(x: 7.29, y: 89.44))
                        shape12.addCurve(to: CGPoint(x: 10.72, y: 88.71), controlPoint1: CGPoint(x: 9.34, y: 89.44), controlPoint2: CGPoint(x: 10.08, y: 89.19))
                        shape12.addLine(to: CGPoint(x: 24.91, y: 78.26))
                        shape12.addCurve(to: CGPoint(x: 28.87, y: 73.65), controlPoint1: CGPoint(x: 26.32, y: 77.22), controlPoint2: CGPoint(x: 28.06, y: 75.2))
                        shape12.addLine(to: CGPoint(x: 35.95, y: 60.16))
                        shape12.addCurve(to: CGPoint(x: 36.09, y: 59.83), controlPoint1: CGPoint(x: 36.01, y: 60.06), controlPoint2: CGPoint(x: 36.04, y: 59.94))
                        shape12.addLine(to: CGPoint(x: 47.67, y: 91.41))
                        shape12.addCurve(to: CGPoint(x: 53.1, y: 95.14), controlPoint1: CGPoint(x: 48.49, y: 93.64), controlPoint2: CGPoint(x: 50.67, y: 95.14))
                        shape12.addCurve(to: CGPoint(x: 54.79, y: 94.88), controlPoint1: CGPoint(x: 53.67, y: 95.14), controlPoint2: CGPoint(x: 54.24, y: 95.05))
                        shape12.addLine(to: CGPoint(x: 55.51, y: 94.65))
                        shape12.addCurve(to: CGPoint(x: 58.71, y: 91.94), controlPoint1: CGPoint(x: 56.92, y: 94.21), controlPoint2: CGPoint(x: 58.06, y: 93.25))
                        shape12.addCurve(to: CGPoint(x: 58.93, y: 87.78), controlPoint1: CGPoint(x: 59.36, y: 90.64), controlPoint2: CGPoint(x: 59.44, y: 89.16))
                        shape12.addLine(to: CGPoint(x: 46.92, y: 55))
                        shape12.addLine(to: CGPoint(x: 46.49, y: 45.13))
                        shape12.addLine(to: CGPoint(x: 59.94, y: 52.04))
                        shape12.addCurve(to: CGPoint(x: 61.48, y: 52.41), controlPoint1: CGPoint(x: 60.41, y: 52.28), controlPoint2: CGPoint(x: 60.95, y: 52.41))
                        shape12.addCurve(to: CGPoint(x: 64.46, y: 50.67), controlPoint1: CGPoint(x: 62.73, y: 52.41), controlPoint2: CGPoint(x: 63.87, y: 51.75))
                        shape12.close()
                        shape12.move(to: CGPoint(x: 64.46, y: 50.67))
                        context.saveGState()
                        context.translateBy(x: 0.04, y: 6.86)
                        shape12.usesEvenOddFillRule = true
                        UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 0.69).setFill()
                        shape12.fill()
                        context.restoreGState()
                        
                        /// Shape
                        let shape13 = UIBezierPath()
                        shape13.move(to: CGPoint(x: 12.02, y: 23.8))
                        shape13.addCurve(to: CGPoint(x: 12.55, y: 23.79), controlPoint1: CGPoint(x: 12.2, y: 23.8), controlPoint2: CGPoint(x: 12.37, y: 23.79))
                        shape13.addCurve(to: CGPoint(x: 20.89, y: 19.94), controlPoint1: CGPoint(x: 15.76, y: 23.65), controlPoint2: CGPoint(x: 18.72, y: 22.28))
                        shape13.addCurve(to: CGPoint(x: 24.04, y: 11.38), controlPoint1: CGPoint(x: 23.06, y: 17.6), controlPoint2: CGPoint(x: 24.18, y: 14.56))
                        shape13.addCurve(to: CGPoint(x: 11.51, y: 0.01), controlPoint1: CGPoint(x: 23.75, y: 4.83), controlPoint2: CGPoint(x: 18.22, y: -0.28))
                        shape13.addCurve(to: CGPoint(x: 0.01, y: 12.41), controlPoint1: CGPoint(x: 4.88, y: 0.3), controlPoint2: CGPoint(x: -0.28, y: 5.86))
                        shape13.addCurve(to: CGPoint(x: 12.02, y: 23.8), controlPoint1: CGPoint(x: 0.29, y: 18.8), controlPoint2: CGPoint(x: 5.57, y: 23.8))
                        shape13.close()
                        shape13.move(to: CGPoint(x: 12.02, y: 23.8))
                        context.saveGState()
                        context.translateBy(x: 20.06, y: 0)
                        shape13.usesEvenOddFillRule = true
                        UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 0.69).setFill()
                        shape13.fill()
                        context.restoreGState()
                        
                        /// Shape
                        let shape14 = UIBezierPath()
                        shape14.move(to: CGPoint(x: 7.95, y: 0))
                        shape14.addCurve(to: CGPoint(x: 0, y: 7.87), controlPoint1: CGPoint(x: 3.57, y: 0), controlPoint2: CGPoint(x: 0, y: 3.53))
                        shape14.addCurve(to: CGPoint(x: 7.95, y: 15.74), controlPoint1: CGPoint(x: 0, y: 12.21), controlPoint2: CGPoint(x: 3.57, y: 15.74))
                        shape14.addCurve(to: CGPoint(x: 15.91, y: 7.87), controlPoint1: CGPoint(x: 12.34, y: 15.74), controlPoint2: CGPoint(x: 15.91, y: 12.21))
                        shape14.addCurve(to: CGPoint(x: 7.95, y: 0), controlPoint1: CGPoint(x: 15.91, y: 3.53), controlPoint2: CGPoint(x: 12.34, y: 0))
                        shape14.close()
                        shape14.move(to: CGPoint(x: 7.95, y: 0))
                        context.saveGState()
                        context.translateBy(x: 63.07, y: 84.54)
                        shape14.usesEvenOddFillRule = true
                        UIColor(hue: 0.019, saturation: 0.616, brightness: 0.827, alpha: 0.69).setFill()
                        shape14.fill()
                        context.restoreGState()
                        
                        context.restoreGState()
                    }
                    
                    context.restoreGState()
                }
                
                context.restoreGState()
            }
        }
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()
    }
    
    class func drawMacher2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 200, resizedFrame.height / 200)
        
        /// target-1
        context.saveGState()
        context.setShadow(
            offset: CGSize(width: 0 * resizedShadowScale, height: 2 * resizedShadowScale),
            blur: 4 * resizedShadowScale,
            color: UIColor(white: 0, alpha: 0.5).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        do {
            context.translateBy(x: 23, y: 12)
            
            /// Capa_1
            do {
                context.saveGState()
                
                /// XMLID_230_
                do {
                    context.saveGState()
                    
                    /// XMLID_231_
                    let xMLID_231_ = UIBezierPath()
                    xMLID_231_.move(to: CGPoint(x: 67.71, y: 13.99))
                    xMLID_231_.addCurve(to: CGPoint(x: 7.79, y: 6.67), controlPoint1: CGPoint(x: 47.74, y: 5.71), controlPoint2: CGPoint(x: 27.76, y: 19.15))
                    xMLID_231_.addLine(to: CGPoint(x: 7.79, y: 3.87))
                    xMLID_231_.addCurve(to: CGPoint(x: 3.89, y: 0), controlPoint1: CGPoint(x: 7.79, y: 1.73), controlPoint2: CGPoint(x: 6.05, y: 0))
                    xMLID_231_.addCurve(to: CGPoint(x: 0, y: 3.87), controlPoint1: CGPoint(x: 1.74, y: 0), controlPoint2: CGPoint(x: 0, y: 1.73))
                    xMLID_231_.addLine(to: CGPoint(x: 0, y: 61.63))
                    xMLID_231_.addLine(to: CGPoint(x: 7.79, y: 65.78))
                    xMLID_231_.addLine(to: CGPoint(x: 7.79, y: 36.22))
                    xMLID_231_.addCurve(to: CGPoint(x: 67, y: 17.94), controlPoint1: CGPoint(x: 27.52, y: 40.11), controlPoint2: CGPoint(x: 47.26, y: 18.69))
                    xMLID_231_.addCurve(to: CGPoint(x: 68.95, y: 16.25), controlPoint1: CGPoint(x: 67.96, y: 17.9), controlPoint2: CGPoint(x: 68.78, y: 17.2))
                    xMLID_231_.addCurve(to: CGPoint(x: 67.71, y: 13.99), controlPoint1: CGPoint(x: 69.12, y: 15.3), controlPoint2: CGPoint(x: 68.61, y: 14.36))
                    xMLID_231_.close()
                    xMLID_231_.move(to: CGPoint(x: 67.71, y: 13.99))
                    context.saveGState()
                    context.translateBy(x: 85.87, y: 4.26)
                    xMLID_231_.usesEvenOddFillRule = true
                    UIColor(hue: 0.76, saturation: 0.439, brightness: 0.608, alpha: 1).setFill()
                    xMLID_231_.fill()
                    context.restoreGState()
                    
                    /// XMLID_1082_
                    let xMLID_1082_ = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 29.14, height: 28.95))
                    context.saveGState()
                    context.translateBy(x: 21.63, y: 0)
                    UIColor(hue: 0.76, saturation: 0.439, brightness: 0.608, alpha: 1).setFill()
                    xMLID_1082_.fill()
                    context.restoreGState()
                    
                    /// XMLID_1083_
                    let xMLID_1083_ = UIBezierPath()
                    xMLID_1083_.move(to: CGPoint(x: 93.27, y: 114.76))
                    xMLID_1083_.addLine(to: CGPoint(x: 93.27, y: 63.66))
                    xMLID_1083_.addCurve(to: CGPoint(x: 85.48, y: 63.67), controlPoint1: CGPoint(x: 90.73, y: 64.39), controlPoint2: CGPoint(x: 88.08, y: 64.41))
                    xMLID_1083_.addLine(to: CGPoint(x: 85.48, y: 114.98))
                    xMLID_1083_.addCurve(to: CGPoint(x: 68.52, y: 125.29), controlPoint1: CGPoint(x: 79.66, y: 116.5), controlPoint2: CGPoint(x: 76.56, y: 121.47))
                    xMLID_1083_.addCurve(to: CGPoint(x: 68.63, y: 123.93), controlPoint1: CGPoint(x: 68.59, y: 124.85), controlPoint2: CGPoint(x: 68.63, y: 124.39))
                    xMLID_1083_.addLine(to: CGPoint(x: 68.63, y: 88.6))
                    xMLID_1083_.addCurve(to: CGPoint(x: 67.47, y: 84.36), controlPoint1: CGPoint(x: 68.63, y: 87.11), controlPoint2: CGPoint(x: 68.23, y: 85.65))
                    xMLID_1083_.addLine(to: CGPoint(x: 54.35, y: 62.12))
                    xMLID_1083_.addLine(to: CGPoint(x: 54.35, y: 16.36))
                    xMLID_1083_.addCurve(to: CGPoint(x: 55.83, y: 14.89), controlPoint1: CGPoint(x: 54.35, y: 15.55), controlPoint2: CGPoint(x: 55.01, y: 14.89))
                    xMLID_1083_.addCurve(to: CGPoint(x: 57.3, y: 16.36), controlPoint1: CGPoint(x: 56.64, y: 14.89), controlPoint2: CGPoint(x: 57.3, y: 15.55))
                    xMLID_1083_.addCurve(to: CGPoint(x: 57.43, y: 37.03), controlPoint1: CGPoint(x: 57.38, y: 29.37), controlPoint2: CGPoint(x: 57.35, y: 24.19))
                    xMLID_1083_.addCurve(to: CGPoint(x: 61.14, y: 43.15), controlPoint1: CGPoint(x: 57.44, y: 39.59), controlPoint2: CGPoint(x: 58.87, y: 41.94))
                    xMLID_1083_.addLine(to: CGPoint(x: 86.05, y: 56.4))
                    xMLID_1083_.addCurve(to: CGPoint(x: 95.57, y: 53.55), controlPoint1: CGPoint(x: 89.48, y: 58.23), controlPoint2: CGPoint(x: 93.74, y: 56.95))
                    xMLID_1083_.addCurve(to: CGPoint(x: 92.69, y: 44.09), controlPoint1: CGPoint(x: 97.4, y: 50.15), controlPoint2: CGPoint(x: 96.12, y: 45.91))
                    xMLID_1083_.addLine(to: CGPoint(x: 71.46, y: 32.79))
                    xMLID_1083_.addCurve(to: CGPoint(x: 71.36, y: 16.44), controlPoint1: CGPoint(x: 71.44, y: 28.97), controlPoint2: CGPoint(x: 71.41, y: 25.04))
                    xMLID_1083_.addCurve(to: CGPoint(x: 54.72, y: 0), controlPoint1: CGPoint(x: 71.31, y: 7.38), controlPoint2: CGPoint(x: 63.85, y: 0))
                    xMLID_1083_.addLine(to: CGPoint(x: 47.66, y: 0))
                    xMLID_1083_.addLine(to: CGPoint(x: 38.78, y: 23.24))
                    xMLID_1083_.addLine(to: CGPoint(x: 40.89, y: 13.37))
                    xMLID_1083_.addCurve(to: CGPoint(x: 40.59, y: 11.36), controlPoint1: CGPoint(x: 41.03, y: 12.69), controlPoint2: CGPoint(x: 40.93, y: 11.97))
                    xMLID_1083_.addLine(to: CGPoint(x: 37.73, y: 6.2))
                    xMLID_1083_.addLine(to: CGPoint(x: 40.27, y: 1.52))
                    xMLID_1083_.addCurve(to: CGPoint(x: 40.25, y: 0.5), controlPoint1: CGPoint(x: 40.44, y: 1.2), controlPoint2: CGPoint(x: 40.44, y: 0.82))
                    xMLID_1083_.addCurve(to: CGPoint(x: 39.36, y: 0), controlPoint1: CGPoint(x: 40.07, y: 0.19), controlPoint2: CGPoint(x: 39.73, y: 0))
                    xMLID_1083_.addLine(to: CGPoint(x: 32.39, y: 0))
                    xMLID_1083_.addCurve(to: CGPoint(x: 31.5, y: 0.5), controlPoint1: CGPoint(x: 32.03, y: 0), controlPoint2: CGPoint(x: 31.69, y: 0.19))
                    xMLID_1083_.addCurve(to: CGPoint(x: 31.49, y: 1.52), controlPoint1: CGPoint(x: 31.32, y: 0.82), controlPoint2: CGPoint(x: 31.31, y: 1.2))
                    xMLID_1083_.addLine(to: CGPoint(x: 34.03, y: 6.21))
                    xMLID_1083_.addLine(to: CGPoint(x: 31.17, y: 11.38))
                    xMLID_1083_.addCurve(to: CGPoint(x: 30.86, y: 13.35), controlPoint1: CGPoint(x: 30.83, y: 11.98), controlPoint2: CGPoint(x: 30.72, y: 12.68))
                    xMLID_1083_.addLine(to: CGPoint(x: 32.69, y: 23.24))
                    xMLID_1083_.addLine(to: CGPoint(x: 23.95, y: 0))
                    xMLID_1083_.addLine(to: CGPoint(x: 16.9, y: 0))
                    xMLID_1083_.addCurve(to: CGPoint(x: 0.26, y: 16.44), controlPoint1: CGPoint(x: 7.77, y: 0), controlPoint2: CGPoint(x: 0.31, y: 7.38))
                    xMLID_1083_.addLine(to: CGPoint(x: 0, y: 67.75))
                    xMLID_1083_.addCurve(to: CGPoint(x: 7, y: 74.77), controlPoint1: CGPoint(x: -0.02, y: 71.61), controlPoint2: CGPoint(x: 3.11, y: 74.75))
                    xMLID_1083_.addCurve(to: CGPoint(x: 14.06, y: 67.82), controlPoint1: CGPoint(x: 10.9, y: 74.77), controlPoint2: CGPoint(x: 14.04, y: 71.66))
                    xMLID_1083_.addLine(to: CGPoint(x: 14.32, y: 16.51))
                    xMLID_1083_.addCurve(to: CGPoint(x: 15.72, y: 15.14), controlPoint1: CGPoint(x: 14.33, y: 15.75), controlPoint2: CGPoint(x: 14.95, y: 15.13))
                    xMLID_1083_.addCurve(to: CGPoint(x: 17.11, y: 16.52), controlPoint1: CGPoint(x: 16.49, y: 15.14), controlPoint2: CGPoint(x: 17.11, y: 15.76))
                    xMLID_1083_.addLine(to: CGPoint(x: 17.11, y: 133.91))
                    xMLID_1083_.addCurve(to: CGPoint(x: 25.55, y: 142.29), controlPoint1: CGPoint(x: 17.11, y: 138.54), controlPoint2: CGPoint(x: 20.89, y: 142.29))
                    xMLID_1083_.addCurve(to: CGPoint(x: 33.99, y: 133.91), controlPoint1: CGPoint(x: 30.21, y: 142.29), controlPoint2: CGPoint(x: 33.99, y: 138.54))
                    xMLID_1083_.addLine(to: CGPoint(x: 33.99, y: 66.93))
                    xMLID_1083_.addLine(to: CGPoint(x: 37.63, y: 66.93))
                    xMLID_1083_.addLine(to: CGPoint(x: 51.75, y: 90.87))
                    xMLID_1083_.addLine(to: CGPoint(x: 51.75, y: 123.93))
                    xMLID_1083_.addCurve(to: CGPoint(x: 54.37, y: 129.99), controlPoint1: CGPoint(x: 51.75, y: 126.31), controlPoint2: CGPoint(x: 52.76, y: 128.46))
                    xMLID_1083_.addCurve(to: CGPoint(x: 42.48, y: 138.67), controlPoint1: CGPoint(x: 47.58, y: 132.63), controlPoint2: CGPoint(x: 44.16, y: 136.15))
                    xMLID_1083_.addCurve(to: CGPoint(x: 42.39, y: 140.77), controlPoint1: CGPoint(x: 42.07, y: 139.3), controlPoint2: CGPoint(x: 42.03, y: 140.11))
                    xMLID_1083_.addCurve(to: CGPoint(x: 44.21, y: 141.85), controlPoint1: CGPoint(x: 42.75, y: 141.44), controlPoint2: CGPoint(x: 43.45, y: 141.85))
                    xMLID_1083_.addLine(to: CGPoint(x: 134.62, y: 141.85))
                    xMLID_1083_.addCurve(to: CGPoint(x: 136.54, y: 140.56), controlPoint1: CGPoint(x: 135.46, y: 141.85), controlPoint2: CGPoint(x: 136.22, y: 141.34))
                    xMLID_1083_.addCurve(to: CGPoint(x: 136.03, y: 138.31), controlPoint1: CGPoint(x: 136.85, y: 139.77), controlPoint2: CGPoint(x: 136.65, y: 138.88))
                    xMLID_1083_.addCurve(to: CGPoint(x: 93.27, y: 114.76), controlPoint1: CGPoint(x: 128.68, y: 131.44), controlPoint2: CGPoint(x: 111.15, y: 116.81))
                    xMLID_1083_.close()
                    xMLID_1083_.move(to: CGPoint(x: 93.27, y: 114.76))
                    context.saveGState()
                    context.translateBy(x: 0.39, y: 33.56)
                    xMLID_1083_.usesEvenOddFillRule = true
                    UIColor(hue: 0.76, saturation: 0.439, brightness: 0.608, alpha: 1).setFill()
                    xMLID_1083_.fill()
                    context.restoreGState()
                    
                    context.restoreGState()
                }
                
                context.restoreGState()
            }
        }
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()
    }
    
    class func drawVorbild2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 200, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 200, y: resizedFrame.height / 200)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 200, resizedFrame.height / 200)
        
        /// gym
        context.saveGState()
        context.setShadow(
            offset: CGSize(width: 0 * resizedShadowScale, height: 2 * resizedShadowScale),
            blur: 4 * resizedShadowScale,
            color: UIColor(white: 0, alpha: 0.5).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        do {
            context.translateBy(x: 8, y: 14)
            
            /// Capa_1
            do {
                context.saveGState()
                
                /// Group
                do {
                    context.saveGState()
                    
                    /// Shape
                    let shape = UIBezierPath()
                    shape.move(to: CGPoint(x: 175.71, y: 87.34))
                    shape.addLine(to: CGPoint(x: 138.86, y: 74.24))
                    shape.addLine(to: CGPoint(x: 148.1, y: 50.35))
                    shape.addCurve(to: CGPoint(x: 146.97, y: 38.84), controlPoint1: CGPoint(x: 149.43, y: 46.91), controlPoint2: CGPoint(x: 148.95, y: 41.96))
                    shape.addLine(to: CGPoint(x: 125.93, y: 5.57))
                    shape.addCurve(to: CGPoint(x: 115.83, y: 0), controlPoint1: CGPoint(x: 123.92, y: 2.39), controlPoint2: CGPoint(x: 119.58, y: 0))
                    shape.addLine(to: CGPoint(x: 112.56, y: 0))
                    shape.addLine(to: CGPoint(x: 110.93, y: 0))
                    shape.addLine(to: CGPoint(x: 73.78, y: 0))
                    shape.addLine(to: CGPoint(x: 72.14, y: 0))
                    shape.addLine(to: CGPoint(x: 68.88, y: 0))
                    shape.addCurve(to: CGPoint(x: 58.78, y: 5.57), controlPoint1: CGPoint(x: 65.13, y: 0), controlPoint2: CGPoint(x: 60.79, y: 2.4))
                    shape.addLine(to: CGPoint(x: 37.74, y: 38.84))
                    shape.addCurve(to: CGPoint(x: 36.61, y: 50.35), controlPoint1: CGPoint(x: 35.76, y: 41.96), controlPoint2: CGPoint(x: 35.28, y: 46.91))
                    shape.addLine(to: CGPoint(x: 45.85, y: 74.24))
                    shape.addLine(to: CGPoint(x: 9, y: 87.34))
                    shape.addCurve(to: CGPoint(x: 0.51, y: 103.75), controlPoint1: CGPoint(x: 2.37, y: 89.69), controlPoint2: CGPoint(x: -1.44, y: 97.05))
                    shape.addCurve(to: CGPoint(x: 12.2, y: 112.53), controlPoint1: CGPoint(x: 2.04, y: 109), controlPoint2: CGPoint(x: 6.74, y: 112.53))
                    shape.addCurve(to: CGPoint(x: 16.44, y: 111.79), controlPoint1: CGPoint(x: 13.63, y: 112.53), controlPoint2: CGPoint(x: 15.06, y: 112.28))
                    shape.addLine(to: CGPoint(x: 78.44, y: 89.76))
                    shape.addLine(to: CGPoint(x: 106.27, y: 89.76))
                    shape.addLine(to: CGPoint(x: 168.27, y: 111.79))
                    shape.addCurve(to: CGPoint(x: 172.51, y: 112.53), controlPoint1: CGPoint(x: 169.65, y: 112.28), controlPoint2: CGPoint(x: 171.08, y: 112.53))
                    shape.addCurve(to: CGPoint(x: 184.2, y: 103.75), controlPoint1: CGPoint(x: 177.97, y: 112.53), controlPoint2: CGPoint(x: 182.66, y: 109))
                    shape.addCurve(to: CGPoint(x: 175.71, y: 87.34), controlPoint1: CGPoint(x: 186.15, y: 97.05), controlPoint2: CGPoint(x: 182.34, y: 89.69))
                    shape.close()
                    shape.move(to: CGPoint(x: 120.3, y: 67.65))
                    shape.addLine(to: CGPoint(x: 120.3, y: 31.03))
                    shape.addLine(to: CGPoint(x: 128.09, y: 43.64))
                    shape.addCurve(to: CGPoint(x: 128.62, y: 50.43), controlPoint1: CGPoint(x: 129.15, y: 45.34), controlPoint2: CGPoint(x: 129.4, y: 48.58))
                    shape.addLine(to: CGPoint(x: 121.21, y: 67.97))
                    shape.addLine(to: CGPoint(x: 120.3, y: 67.65))
                    shape.close()
                    shape.move(to: CGPoint(x: 64.4, y: 67.65))
                    shape.addLine(to: CGPoint(x: 63.5, y: 67.97))
                    shape.addLine(to: CGPoint(x: 56.1, y: 50.42))
                    shape.addCurve(to: CGPoint(x: 56.62, y: 43.63), controlPoint1: CGPoint(x: 55.31, y: 48.58), controlPoint2: CGPoint(x: 55.56, y: 45.34))
                    shape.addLine(to: CGPoint(x: 64.4, y: 31.04))
                    shape.addLine(to: CGPoint(x: 64.4, y: 67.65))
                    shape.addLine(to: CGPoint(x: 64.4, y: 67.65))
                    shape.close()
                    shape.move(to: CGPoint(x: 64.4, y: 67.65))
                    context.saveGState()
                    context.translateBy(x: 0.22, y: 59.39)
                    shape.usesEvenOddFillRule = true
                    UIColor(hue: 0.411, saturation: 0.392, brightness: 0.58, alpha: 1).setFill()
                    shape.fill()
                    context.restoreGState()
                    
                    /// Shape
                    let shape2 = UIBezierPath()
                    shape2.move(to: CGPoint(x: 26.54, y: 53.23))
                    shape2.addCurve(to: CGPoint(x: 53.08, y: 26.61), controlPoint1: CGPoint(x: 41.17, y: 53.23), controlPoint2: CGPoint(x: 53.08, y: 41.29))
                    shape2.addCurve(to: CGPoint(x: 26.54, y: 0), controlPoint1: CGPoint(x: 53.08, y: 11.94), controlPoint2: CGPoint(x: 41.17, y: 0))
                    shape2.addCurve(to: CGPoint(x: 0, y: 26.61), controlPoint1: CGPoint(x: 11.91, y: 0), controlPoint2: CGPoint(x: 0, y: 11.94))
                    shape2.addCurve(to: CGPoint(x: 26.54, y: 53.23), controlPoint1: CGPoint(x: 0, y: 41.29), controlPoint2: CGPoint(x: 11.91, y: 53.23))
                    shape2.close()
                    shape2.move(to: CGPoint(x: 26.54, y: 53.23))
                    context.saveGState()
                    context.translateBy(x: 66.04, y: 0.24)
                    shape2.usesEvenOddFillRule = true
                    UIColor(hue: 0.411, saturation: 0.392, brightness: 0.58, alpha: 1).setFill()
                    shape2.fill()
                    context.restoreGState()
                    
                    context.restoreGState()
                }
                
                context.restoreGState()
            }
        }
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()
    }
    
    
    //MARK: - Canvas Images
    
    /// Icon Library
    
    class func imageOfClose2() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
        Graphics.drawClose2()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    class func imageOfInfo2() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
        Graphics.drawInfo2()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    class func imageOfSettings2() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 101, height: 100), false, 0)
        Graphics.drawSettings2()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    class func imageOfAppicon() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 400), false, 0)
        Graphics.drawAppicon()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    class func imageOfButtonHelp() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 400), false, 0)
        Graphics.drawButtonHelp()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    class func imageOfEnthalter2() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
        Graphics.drawEnthalter2()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    class func imageOfZuschauer2() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
        Graphics.drawZuschauer2()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    class func imageOfPadawan2() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
        Graphics.drawPadawan2()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    class func imageOfMitspieler2() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
        Graphics.drawMitspieler2()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    class func imageOfMacher2() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
        Graphics.drawMacher2()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    class func imageOfVorbild2() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 200, height: 200), false, 0)
        Graphics.drawVorbild2()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    
    //MARK: - Resizing Behavior
    
    enum ResizingBehavior {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.
        
        func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }
            
            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)
            
            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }
            
            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
    
    
}
